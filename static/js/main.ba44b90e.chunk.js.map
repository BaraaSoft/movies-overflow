{"version":3,"sources":["Pages/NotFound.page.js","https/index.js","featureList/featureList.component.js","actionTypes.js","featureList/featureList.action.js","featureList/PaginationList.component.js","contentDetails/details.style.js","contentDetails/contentDetails.component.js","contentDetails/actorDetails.component.js","Pages/MovieDetails.page.js","contentDetails/contentDetails.action.js","Pages/ActorDetails.page.js","menu/search.component.js","menu/menu.action.js","media.js","menu/menu.component.js","moreviewTypes.js","Pages/Home.page.js","Pages/MoreView.page.js","base.reducers.js","menu/menu.reducer.js","featureList/featureList.reducer.js","contentDetails/contentDetails.reducer.js","App.js","serviceWorker.js","index.js"],"names":["NotFoundPage","props","style","height","display","flexDirection","justifyContent","alignItems","image","Empty","PRESENTED_IMAGE_SIMPLE","https","axios","create","baseURL","timeout","params","language","getImageUrl","relativeUrl","DivContainer","styled","div","DivSubcontainer","DivTitle","DivSubtitleList","Divsubtitle","DivsubtitleLast","DivImageList","DivImageContainer","DivImage","img","DivImageTitle","DivOverlay","RenderTopGenre","topGenre","map","genre","index","RenderListItem","data","isMovie","item","count","vote_average","overflowCount","backgroundColor","to","id","title","className","src","poster_path","RenderMore","moreUrl","type","FeatureList","ActionTypes","fetchPopularMovies","page","dispatch","a","get","api_key","response","payload","setPageNum","results","setPagination","total","total_pages","fetchNowPlaying","fetchUpcomingMovies","fetchPopularTv","fetchTrendingMovies","pageInfo","arr","pageNum","MainDiv","ListContainerDiv","DivPaginationContainer","paging","currentPage","pageSize","i","limit","lastLimit","PaginationList","useState","pagination","setPaging","useEffect","size","onChange","onPageChange","defaultPageSize","defaultCurrent","SectionImage","DivSplitOne","DivSplitTwo","MovieCard","imgUrl","rate","marginLeft","value","disabled","color","ActorList","actors","actor","name","cursor","key","ContentDetails","movieActors","country","production_countries","length","parseCountry","runtime","arrTimes","reduce","accum","current","getEpisodesAverageRuntime","episode_run_time","tagline","Item","label","mins","RangeError","h","m","moment","utc","hours","minutes","format","getTimeFromMins","release_date","seasons","overview","DivMainContainer","ActorDetails","profile_path","birthday","place_of_birth","biography","DivMain","DivBody","useQuery","URLSearchParams","useLocation","search","MovieDetailsPage","connect","movieDetails","similarMovies","similarTvs","fetchMovieDetails","fetchTvDetails","fetchSimilarMovies","fetchMovieActors","url","cast","fetchSimilarTvs","useParams","location","isMovies","similarShowListData","border","onBack","history","goBack","subTitle","ActorDetailsPage","actorDetails","actorAllMovies","fetcActorDetails","fetcActorAllMovies","Option","AutoComplete","debounce","callback","delayTime","timer","clearTimeout","setTimeout","apply","arguments","renderOption","text","SearchBox","searchedMovies","searchMovieByName","query","width","dataSource","onSelect","e","onSearch","placeholder","optionLabelProp","suffix","marginRight","sizes","xxxl","xxl","xl","md","sm","Object","keys","acc","css","SubMenu","Menu","DivSearchContainer","media","TopMenuComponent","state","handleClick","console","log","setState","this","fetchGenre","menuGenre","overflow","onClick","selectedKeys","mode","GenreSubGroup","React","Component","ItemGroup","Math","floor","TopMenu","genres","MoreviewTypes","SpaceTop","HomePage","popularMovies","nowPlayingMovies","upcommingMovies","popularTVs","trendingMovies","fetchData","queryParams","pagenum","info","toUpperCase","selectDataSource","MoreViewPage","subinfo","toLocaleUpperCase","combineReducers","action","_","uniqBy","sort","App","basename","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","store","createStore","reducers","applyMiddleware","thunk","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kQAIaA,EAAe,SAACC,GACzB,OACI,yBAAKC,MAAO,CAAEC,OAAQ,OAAQC,QAAS,OAAQC,cAAe,SAAUC,eAAgB,SAAUC,WAAY,WAC1G,kBAAC,IAAD,CAAOC,MAAOC,IAAMC,yBACpB,mD,iECNCC,E,OAAQC,EAAMC,OAAO,CAC9BC,QAAS,+BACTC,QAAS,IACTC,OAAQ,CACJC,SAAU,WAILC,EAAc,SAACC,GACxB,MAAM,sCAAN,OAA6CA,I,68ECJjD,IAAMC,EAAeC,IAAOC,IAAV,KAMZC,EAAkBF,IAAOC,IAAV,KAOfE,EAAWH,IAAOC,IAAV,KASRG,EAAkBJ,IAAOC,IAAV,KASfI,EAAcL,IAAOC,IAAV,KAaXK,EAAkBN,YAAOK,EAAPL,CAAH,KAUfO,EAAeP,IAAOC,IAAV,KAOZO,EAAoBR,IAAOC,IAAV,KAgBjBQ,EAAWT,IAAOU,IAAV,KAQRC,EAAgBX,IAAOC,IAAV,KAebW,EAAaZ,IAAOC,IAAV,KAUVY,EAAiB,SAAC,GAA4D,IAAD,IAAzDC,gBAAyD,MAA9C,CAAC,SAAU,QAAS,SAAU,UAAgB,EAC/E,OACI,kBAACV,EAAD,KAEQU,EAASC,KAAI,SAACC,EAAOC,GACjB,OAAIA,EAAQ,EAAU,KAElB,kBAACZ,EAAD,KAAcW,QAQhCE,EAAiB,SAAC,GAAmC,IAAD,IAAhCC,YAAgC,MAAzB,GAAyB,MAArBC,eAAqB,SACtD,OAAOD,EAAKJ,KAAI,SAACM,GACb,OACI,kBAAC,IAAD,CAAOC,MAAOD,EAAKE,aAAcC,cAAe,GAAI3C,MAAO,CAAE4C,gBAAiB,YAC1E,kBAAC,IAAD,CAAMC,GAAE,mBAAcL,EAAKM,GAAnB,qBAAkCP,EAAlC,kBAAmDC,EAAKO,OAAS,OACrE,kBAACpB,EAAD,CAAmBqB,UAAU,aACzB,kBAACpB,EAAD,CAAUqB,IAAKjC,EAAYwB,EAAKU,eAChC,kBAACpB,EAAD,KACI,2BAAIU,EAAKO,QAEb,kBAAChB,EAAD,aAOlBoB,EAAa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAClB,OAAQA,EAEA,kBAAC3B,EAAD,KACI,kBAAC,IAAD,CAAMoB,GAAIO,GACN,kBAAC,IAAD,CAAQC,KAAK,UAAb,OACQ,kBAAC,IAAD,CAAMA,KAAK,oBAI3B,MAINC,EAAc,SAACvD,GAAW,IACpBgD,EAA4ChD,EAA5CgD,MAAOK,EAAqCrD,EAArCqD,QAASnB,EAA4BlC,EAA5BkC,SAAUK,EAAkBvC,EAAlBuC,KAAMC,EAAYxC,EAAZwC,QACxC,OACI,kBAACrB,EAAD,KACI,kBAACG,EAAD,KACI,kBAACC,EAAD,KACI,6BAAMyB,GACLd,GAAa,kBAAC,EAAD,CAAgBA,SAAUA,IACxC,kBAAC,EAAD,CAAYmB,QAASA,MAG7B,kBAAC1B,EAAD,CAAcsB,UAAU,gBACpB,kBAAC,EAAD,CAAgBV,KAAMA,EAAMC,QAASA,O,gCC/KxCgB,EACG,aADHA,EAEI,eAFJA,EAGU,oBAHVA,GAIW,qBAJXA,GAKQ,kBALRA,GAMQ,kBANRA,GAOQ,mBAPRA,GASM,gBATNA,GAUO,iBAVPA,GAWI,cAXJA,GAaK,gBAbLA,GAcM,gBAdNA,GAeS,mBAfTA,GAiBG,aCXHC,GAAqB,SAACC,GAAD,8CAAU,WAAOC,GAAP,eAAAC,EAAA,sEACjBlD,EAAMmD,IAAI,iBAC7B,CAAE9C,OAAQ,CAAE+C,QAAS,mCAAoCJ,UAFrB,cAClCK,EADkC,gBAGlCJ,EAAS,CACXL,KAAME,GACNQ,QAASC,GAAWF,EAASxB,KAAK2B,QAASR,KALP,uBAOlCC,EAASQ,GAAc,CAAEC,MAAOL,EAASxB,KAAK8B,eAPZ,2CAAV,uDAUrBC,GAAkB,SAACZ,GAAD,8CAAU,WAAOC,GAAP,eAAAC,EAAA,sEACdlD,EAAMmD,IAAI,qBAC7B,CAAE9C,OAAQ,CAAE+C,QAAS,mCAAoCJ,UAFxB,cAC/BK,EAD+B,gBAG/BJ,EAAS,CACXL,KAAME,EACNQ,QAASC,GAAWF,EAASxB,KAAK2B,QAASR,KALV,uBAO/BC,EAASQ,GAAc,CAAEC,MAAOL,EAASxB,KAAK8B,eAPf,2CAAV,uDAUlBE,GAAsB,SAACb,GAAD,8CAAU,WAAOC,GAAP,eAAAC,EAAA,sEAClBlD,EAAMmD,IAAI,kBAC7B,CAAE9C,OAAQ,CAAE+C,QAAS,mCAAoCJ,UAFpB,cACnCK,EADmC,gBAGnCJ,EAAS,CACXL,KAAME,GACNQ,QAASC,GAAWF,EAASxB,KAAK2B,QAASR,KALN,uBAOnCC,EAASQ,GAAc,CAAEC,MAAOL,EAASxB,KAAK8B,eAPX,2CAAV,uDAUtBG,GAAiB,SAACd,GAAD,8CAAU,WAAOC,GAAP,eAAAC,EAAA,sEACblD,EAAMmD,IAAI,cAC7B,CAAE9C,OAAQ,CAAE+C,QAAS,mCAAoCJ,UAFzB,cAC9BK,EAD8B,gBAG9BJ,EAAS,CACXL,KAAME,GACNQ,QAASC,GAAWF,EAASxB,KAAK2B,QAASR,KALX,uBAO9BC,EAASQ,GAAc,CAAEC,MAAOL,EAASxB,KAAK8B,eAPhB,2CAAV,uDAUjBI,GAAsB,SAACf,GAAD,8CAAU,WAAOC,GAAP,eAAAC,EAAA,sEAClBlD,EAAMmD,IAAI,sBAC7B,CAAE9C,OAAQ,CAAE+C,QAAS,mCAAoCJ,UAFpB,cACnCK,EADmC,gBAGnCJ,EAAS,CACXL,KAAME,GACNQ,QAASC,GAAWF,EAASxB,KAAK2B,QAASR,KALN,uBAOnCC,EAASQ,GAAc,CAAEC,MAAOL,EAASxB,KAAK8B,eAPX,2CAAV,uDAW7BF,GAAgB,SAACO,GAAD,8CAAc,WAAOf,GAAP,SAAAC,EAAA,sDAChCD,EAAS,CACLL,KAAME,GACNQ,QAASU,IAHmB,2CAAd,uDAMhBT,GAAa,WAAwB,IAAvBU,EAAsB,uDAAhB,GAAIC,EAAY,uCACtC,OAAOD,EAAIxC,KAAI,SAACM,GAAD,sBAAgBA,EAAhB,CAAsBmC,gB,syDCzDzC,IAAMC,GAAUzD,IAAOC,IAAV,MAMPyD,GAAmB1D,IAAOC,IAAV,MAehBO,IAPeR,IAAOC,IAAV,MAOQD,IAAOC,IAAV,OAgBjBQ,GAAWT,IAAOU,IAAV,MAQRC,GAAgBX,IAAOC,IAAV,MAebW,GAAaZ,IAAOC,IAAV,MASV0D,GAAyB3D,IAAOC,IAAV,MAOtBiB,GAAiB,SAAC,GAA2C,IAAD,IAAxCC,YAAwC,MAAjC,GAAiC,MAA7BC,eAA6B,SAAbwC,EAAa,EAAbA,OACzCC,EAAiCD,EAAjCC,YAAoBC,GAAaF,EAApBZ,MAAoBY,EAAbE,UAC5B,OAAO3C,EAAKJ,KAAI,SAACM,EAAM0C,GACnB,IAAMC,EAAQH,EAAcC,EACtBG,GAAaJ,EAAc,GAAKC,EAClC7C,EAAQI,EAAKmC,QAAUM,EAE3B,OAAM7C,GAAS+C,GAAS/C,EAAQgD,EAG5B,kBAAC,IAAD,CAAO3C,MAAOD,EAAKE,aAAcC,cAAe,GAAI3C,MAAO,CAAE4C,gBAAiB,YAC1E,kBAAC,IAAD,CAAMC,GAAE,mBAAcL,EAAKM,GAAnB,qBAAkCP,EAAlC,kBAAmDC,EAAKO,OAAS,OACrE,kBAAC,GAAD,CAAmBC,UAAU,aACzB,kBAAC,GAAD,CAAUC,IAAKjC,EAAYwB,EAAKU,eAChC,kBAAC,GAAD,KACI,2BAAIV,EAAKO,QAEb,kBAAC,GAAD,SAVmC,SAkBrDsC,GAAiB,SAACtF,GAAW,IAAD,EACFuF,mBAASvF,EAAMwF,YADb,oBACvBR,EADuB,KACfS,EADe,KAE9BC,qBAAU,WACND,EAAU,eAAKT,EAAN,CAAcZ,MAAOpE,EAAMwF,WAAWpB,WAChD,CAACpE,EAAMwF,aAKV,OACI,kBAACX,GAAD,KACI,kBAACC,GAAD,KACI,kBAAC,GAAD,CAAgBvC,KAAMvC,EAAMuC,KAAMyC,OAAQA,KAE9C,kBAACD,GAAD,KACI,kBAAC,KAAD,CAAYY,KAAK,QAAQC,SAVjB,SAAClC,EAAMwB,GACvBO,EAAU,eAAKT,EAAN,CAAcC,YAAavB,KACpC1D,EAAM6F,aAAanC,IASPoC,gBAAiBd,EAAOE,SAAUa,eAAgBf,EAAOC,YAAab,MAAOY,EAAOZ,W,ouDCvHjG,IAAMjD,GAAeC,IAAOC,IAAV,MAWZ2E,GAAe5E,IAAOC,IAAV,MAKZO,GAAoBR,IAAOC,IAAV,MAgBjBQ,GAAWT,IAAOU,IAAV,MAQRC,GAAgBX,IAAOC,IAAV,MAebW,GAAaZ,IAAOC,IAAV,MAUV4E,GAAc7E,IAAOC,IAAV,MAKX6E,GAAc9E,IAAOC,IAAV,MCpCxB,IAAM8E,GAAY,SAACnG,GAAW,IAClBoG,EAAwBpG,EAAxBoG,OAAQpD,EAAgBhD,EAAhBgD,MAAOqD,EAASrG,EAATqG,KACvB,OACI,kBAACL,GAAD,KACI,kBAAC,GAAD,CAAmB/C,UAAU,aACzB,kBAAC,GAAD,CAAUC,IAAKjC,EAAYmF,KAC3B,kBAAC,GAAD,KACI,2BAAIpD,IAER,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAM/C,MAAO,CAAEqG,WAAY,QAAU5D,MAAO,GAAI6D,MAAOF,EAAMG,UAAQ,IACrE,0BAAMvD,UAAU,iBAAgB,kBAAC,KAAD,CAAKwD,MAAM,QAAQJ,MAMzDK,GAAY,SAAC1G,GAEf,OADmBA,EAAX2G,OACMxE,KAAI,SAAAyE,GACd,OACI,kBAAC,IAAD,CAAM9D,GAAE,kBAAa8D,EAAM7D,GAAnB,iBAA8B6D,EAAMC,OACxC,kBAAC,KAAD,CAAK5G,MAAO,CAAE6G,OAAQ,WAAaC,IAAKH,EAAM7D,GAAI0D,MAAM,QAAQG,EAAMC,WAStF,IAAMG,GAAiB,SAAChH,GAAW,IAEvBuC,EAAsBvC,EAAtBuC,KAAM0E,EAAgBjH,EAAhBiH,YACRC,EAtDW,SAAC3E,GAClB,OAAIA,EAAK4E,sBAAwB5E,EAAK4E,qBAAqBC,OAAS,EACzD7E,EAAK4E,qBAAqB,GAAGN,KAEjC,KAkDSQ,CAAa9E,GAEvB+E,EAAU/E,EAAK+E,SARzB,WAAoD,IAAjBC,EAAgB,uDAAL,CAAC,GAC3C,OAAOA,EAASC,QAAO,SAACC,EAAOC,GAAR,OAAoBD,EAAQC,IAAS,GAAKH,EAASH,OAO1CO,CAA0BpF,EAAKqF,kBAC/D,OACI,kBAAC,GAAD,CAAc3E,UAAU,aACpB,kBAACgD,GAAD,KACI,kBAAC,GAAD,CAAWjD,MAAOT,EAAKS,OAAST,EAAKsE,KAAMT,OAAQ7D,EAAKY,YAAakD,KAAM9D,EAAKI,gBAEpF,kBAACuD,GAAD,KACI,kBAAC,KAAD,CAAclD,MAAOT,EAAKS,OAAST,EAAKsE,MACnCtE,EAAKsF,SAAY,kBAAC,KAAaC,KAAd,CAAmBC,MAAM,YAAYxF,EAAKsF,SAC5D,kBAAC,KAAaC,KAAd,CAAmBC,MAAO,6BAAK,kBAAC,IAAD,CAAMzE,KAAK,iBAAhB,iBACtB,0BAAML,UAAU,yBA3DxC,SAAyB+E,GACrB,GAAIA,GAAQ,MAAWA,EAAO,EAC1B,MAAM,IAAIC,WAAW,wEAClB,GAAID,EAAO,GACd,MAAO,iBAEX,IAAIE,EAAIF,EAAO,GAAK,EAChBG,EAAIH,EAAO,GAAK,EACpB,OAAOI,KAAOC,MAAMC,MAAMJ,GAAGK,QAAQJ,GAAGK,OAAO,SAmDcC,CAAgBnB,KAE5DJ,GAAY,kBAAC,KAAaY,KAAd,CAAmBC,MAAM,sBAAsBb,GAC5D,kBAAC,KAAaY,KAAd,CAAmBC,MAAM,gBAAgBK,KAAO7F,EAAKmG,cAAcF,OAAO,iBACzEjG,EAAKoG,SAAY,kBAAC,KAAab,KAAd,CAAmBC,MAAM,aAAcxF,EAAKoG,QAAQvB,SAE1E,kBAAC,KAAD,CAAcpE,MAAO,YACjB,kBAAC,KAAa8E,KAAd,CAAmBC,MAAM,IAAIxF,EAAKqG,WAEtC,kBAAC,KAAD,CAAc5F,MAAO,QACjB,kBAAC,KAAa8E,KAAd,CAAmBC,MAAM,IACrB,kBAAC,GAAD,CAAWpB,OAAQM,S,2FC7E3C,IAAM4B,GAAmBzH,YAAOD,GAAPC,CAAH,MAIhB+E,GAAY,SAACnG,GAAW,IAClBoG,EAAiBpG,EAAjBoG,OAAQS,EAAS7G,EAAT6G,KAChB,OACI,kBAACb,GAAD,KACI,kBAAC,GAAD,CAAmB/C,UAAU,aACzB,kBAAC,GAAD,CAAUC,IAAKjC,EAAYmF,KAC3B,kBAAC,GAAD,KACI,2BAAIS,IAER,kBAAC,GAAD,SAQViC,GAAe,SAAC9I,GAAW,IACrBuC,EAASvC,EAATuC,KACR,OACI,kBAACsG,GAAD,CAAkB5F,UAAU,aACxB,kBAACgD,GAAD,KACI,kBAAC,GAAD,CAAWY,KAAMtE,EAAKsE,KAAMT,OAAQ7D,EAAKwG,gBAE7C,kBAAC7C,GAAD,KACI,kBAAC,KAAD,CAAclD,MAAOT,EAAKsE,MACtB,kBAAC,KAAaiB,KAAd,CAAmBC,MAAO,6BAAK,kBAAC,IAAD,CAAMzE,KAAK,aAAhB,mBACtB,0BAAML,UAAU,yBAAyBV,EAAKyG,WAElD,kBAAC,KAAalB,KAAd,CAAmBC,MAAM,QAAQxF,EAAK0G,iBAE1C,kBAAC,KAAD,CAAcjG,MAAO,SACjB,kBAAC,KAAa8E,KAAd,CAAmBC,MAAM,IAAIxF,EAAK2G,e,oRCnCtD,IAAMC,GAAU/H,IAAOC,IAAV,MAIP+H,GAAUhI,IAAOC,IAAV,MAWb,SAASgI,KACL,OAAO,IAAIC,gBAAgBC,cAAcC,QAItC,IAkDDC,GAAmBC,aAJD,SAAC,GACrB,MAAO,CAAEC,aADyE,EAA3DA,aACAC,cAD2D,EAA7CA,cACC3C,YAD4C,EAA9BA,YACD4C,WAD+B,EAAjBA,cAKjE,CACIC,kBCxFyB,SAAC/G,GAAD,8CAAQ,WAAOY,GAAP,eAAAC,EAAA,sEACdlD,EAAMmD,IAAN,iBAAoBd,GACvC,CAAEhC,OAAQ,CAAE+C,QAAS,sCAFY,OAC/BC,EAD+B,OAGrCJ,EAAS,CACLL,KAAME,GACNQ,QAASD,EAASxB,OALe,2CAAR,uDDwFNwH,eC/EG,SAAChH,GAAD,8CAAQ,WAAOY,GAAP,eAAAC,EAAA,sEACXlD,EAAMmD,IAAN,cAAiBd,GACpC,CAAEhC,OAAQ,CAAE+C,QAAS,sCAFS,OAC5BC,EAD4B,OAGlCJ,EAAS,CACLL,KAAME,GACNQ,QAASD,EAASxB,OALY,2CAAR,uDDgFtByH,mBCtE0B,SAACjH,GAAD,8CAAQ,WAAOY,GAAP,eAAAC,EAAA,sEACflD,EAAMmD,IAAN,iBAAoBd,EAApB,YACnB,CAAEhC,OAAQ,CAAE+C,QAAS,sCAFa,OAChCC,EADgC,OAGtCJ,EAAS,CACLL,KAAME,GACNQ,QAASD,EAASxB,KAAK2B,UALW,2CAAR,uDDsEN+F,iBCnDI,SAAClH,GAAD,IAAKP,IAAL,uGAAwB,WAAOmB,GAAP,iBAAAC,EAAA,6DAChDsG,EAAM1H,EAAO,iBAAaO,EAAb,0BAAmCA,EAAnC,YADmC,SAG7BrC,EAAMmD,IAAIqG,EAC7B,CAAEnJ,OAAQ,CAAE+C,QAAS,sCAJ2B,OAG9CC,EAH8C,OAKpDJ,EAAS,CACLL,KAAME,GACNQ,QAASD,EAASxB,KAAK4H,OAPyB,2CAAxB,wDDmDcC,gBC7Df,SAACrH,GAAD,8CAAQ,WAAOY,GAAP,eAAAC,EAAA,sEACZlD,EAAMmD,IAAN,cAAiBd,EAAjB,YACnB,CAAEhC,OAAQ,CAAE+C,QAAS,sCAFU,OAC7BC,EAD6B,OAGnCJ,EAAS,CACLL,KAAME,GACNQ,QAASD,EAASxB,KAAK2B,UALQ,2CAAR,wDD0DNwF,EAlDgB,SAAC1J,GAAW,IACzC+C,EAAOsH,cAAPtH,GACFuH,EAAWf,cACbgB,EAAWlB,KAAWxF,IAAI,YAC1Bb,EAAQqG,KAAWxF,IAAI,SAEvBiG,EAEA9J,EAFA8J,kBAAmBC,EAEnB/J,EAFmB+J,eAAgBE,EAEnCjK,EAFmCiK,iBAAkBG,EAErDpK,EAFqDoK,gBACrDJ,EACAhK,EADAgK,mBAAoBL,EACpB3J,EADoB2J,aAAcC,EAClC5J,EADkC4J,cAAe3C,EACjDjH,EADiDiH,YAAa4C,EAC9D7J,EAD8D6J,WAE9DW,EAAkC,QAAZD,EAAqBX,EAAgBC,EAgB/D,OAfAnE,qBAAU,WACN,IAAIlD,EAAsB,QAAZ+H,EACV/H,GAEAsH,EAAkB/G,GAClBiH,EAAmBjH,KAGnBqH,EAAgBrH,GAChBgH,EAAehH,IAEnBkH,EAAiBlH,EAAIP,KACtB,CAAC8H,IAIA,kBAACnB,GAAD,KACI,kBAAC,IAAD,CACIlJ,MAAO,CAAEwK,OAAQ,gCACjBC,OAAQ,kBAAM1K,EAAM2K,QAAQC,UAC5B5H,MAAM,UACN6H,SAAU7H,IAEd,kBAACoG,GAAD,CAASnG,UAAU,gBACf,kBAAC,GAAD,CAAgBV,KAAMoH,EAAc1C,YAAaA,IACjD,kBAAC,EAAD,CACIzE,QAAqB,QAAZ+H,EACThI,KAAMiI,EACNxH,MAAmB,QAAZuH,EAAqB,iBAAmB,yB,oRE/DnE,IAAMpB,GAAU/H,IAAOC,IAAV,MAIP+H,GAAUhI,IAAOC,IAAV,MAWb,IAuCMyJ,GAAmBpB,aAJD,SAAC,GACrB,MAAO,CAAEqB,aADiD,EAAnCA,aACAC,eADmC,EAArBA,kBAIS,CAAEC,iBDLpB,SAAClI,GAAD,8CAAQ,WAAOY,GAAP,eAAAC,EAAA,sEACblD,EAAMmD,IAAN,kBAAqBd,GACxC,CAAEhC,OAAQ,CAAE+C,QAAS,sCAFW,OAC9BC,EAD8B,OAKpCJ,EAAS,CACLL,KAAME,GACNQ,QAASD,EAASxB,OAPc,2CAAR,uDCKsC2I,mBDhBpC,SAACnI,GAAD,IAAKP,IAAL,uGAAwB,WAAOmB,GAAP,iBAAAC,EAAA,6DAClDsG,EAAa,kBAAcnH,EAArBP,EAAO,gCADqC,SAE/B9B,EAAMmD,IAAIqG,EAC7B,CAAEnJ,OAAQ,CAAE+C,QAAS,sCAH6B,OAEhDC,EAFgD,OAItDJ,EAAS,CACLL,KAAME,GACNQ,QAASD,EAASxB,KAAK4H,OAN2B,2CAAxB,yDCgBTT,EAvCS,SAAC1J,GAAW,IAGlC+C,EAAOsH,cAAPtH,GACFuH,EAAWf,cACb1C,EARG,IAAIyC,gBAAgBC,cAAcC,QAQnB3F,IAAI,QAElBmH,EAAuEhL,EAAvEgL,eAAgBD,EAAuD/K,EAAvD+K,aAAcE,EAAyCjL,EAAzCiL,iBAAkBC,EAAuBlL,EAAvBkL,mBASxD,OAPAxF,qBAAU,WAENuF,EAAiBlI,GACjBmI,EAAmBnI,KAGpB,CAACuH,IAEA,kBAAC,GAAD,KACI,kBAAC,IAAD,CACIrK,MAAO,CAAEwK,OAAQ,gCACjBC,OAAQ,kBAAM1K,EAAM2K,QAAQC,UAC5B5H,MAAM,QACN6H,SAAUhE,IAEd,kBAAC,GAAD,CAAS5D,UAAU,gBACf,kBAAC,GAAD,CAAcV,KAAMwI,IACpB,kBAAC,EAAD,CACIxI,KAAMyI,EACNhI,MAAK,oBAAe6D,U,gFCnDhCsE,GAAWC,KAAXD,OAGFE,GAAW,SAAUC,EAAUC,GACjC,IAAIC,EACJ,OAAO,WAAa,IAAD,mBACfC,aAAaD,GACbA,EAAQE,YAAW,WACfJ,EAASK,MAAM,EAAMC,KACtBL,KAIX,SAASM,GAAapJ,GAClB,OAEI,kBAAC0I,GAAD,CAAQpE,IAAKtE,EAAKM,GAAI+I,KAAMrJ,EAAKO,OAC7B,kBAAC,IAAD,CAAMF,GAAE,mBAAcL,EAAKM,GAAnB,cAAkC,EAAlC,kBAAgDN,EAAKO,OAAS,OAClE,yBAAKC,UAAU,sBACX,0BAAMA,UAAU,2BAEXR,EAAKO,OAGV,0BAAMC,UAAU,gCAOpC,IAiCM8I,GAAYrC,aAJM,SAAC,GACrB,MAAO,CAAEsC,eADmC,EAArBA,kBAIgB,CAAEC,kBC3DZ,SAACC,GAAD,8CAAW,WAAOvI,GAAP,eAAAC,EAAA,sEACjBlD,EAAMmD,IAAI,gBAC7B,CACI9C,OAAQ,CACJ+C,QAAS,mCACT9C,SAAU,QACVkL,WAN4B,OAClCnI,EADkC,OASxCJ,EAAS,CACLL,KAAME,EACNQ,QAASD,EAASxB,KAAK2B,UAXa,2CAAX,wDD2DfwF,EAjCS,SAAC1J,GAAW,IAC3BgM,EAAsChM,EAAtCgM,eAAgBC,EAAsBjM,EAAtBiM,kBACxB,OACI,kBAAC,KAAD,CACIhJ,UAAU,gBACV0C,KAAK,QACL1F,MAAO,CAAEkM,MAAO,QAChBC,WAAYJ,EAAe7J,IAAI0J,IAC/BQ,SAAU,SAACC,GAAD,MAAQ,IAClBC,SAAUlB,IAAS,SAACa,GAAD,OAAWD,EAAkBC,KAAQ,KACxDM,YAAY,SACZC,gBAAgB,QAEhB,kBAAC,KAAD,CACIC,OACI,kBAAC,IAAD,CACIzJ,UAAU,aACVhD,MAAO,CAAE0M,aAAc,IACvBhH,KAAK,QACLrC,KAAK,WAEL,kBAAC,IAAD,CAAMA,KAAK,kB,uIEzDnC,IAAMsJ,GAAQ,CACVC,KAAM,KACNC,IAAK,KACLC,GAAI,KACJC,GAAI,IACJC,GAAI,KAEOC,UAAOC,KAAKP,IAAOpF,QAAO,SAAC4F,EAAKrF,GAM3C,OALAqF,EAAIrF,GAAS,kBAAasF,YAAZ,KACST,GAAM7E,GACtBsF,IAAG,WAAH,eAGAD,IACR,I,ynBCPKE,GAAYC,KAAZD,QAGFE,GAAqBpM,YAAOmM,KAAKzF,KAAZ1G,CAAH,KAGjBqM,GAAMX,IAHW,MAMlBW,GAAMV,GANY,MAUlBU,GAAMT,GAVY,MAcjBS,GAAMR,GAdW,OAqBlBS,G,8MACFC,MAAQ,CACJjG,QAAS,Q,EAObkG,YAAc,SAAAtB,GACVuB,QAAQC,IAAI,SAAUxB,GACtB,EAAKyB,SAAS,CACVrG,QAAS4E,EAAEvF,O,qFANfiH,KAAKhO,MAAMiO,e,+BAWWD,KAAKhO,MAAnBkO,UACR,OACI,kBAAC,KAAD,CAAMjO,MAAO,CAAEkO,SAAU,UAAYC,QAASJ,KAAKJ,YAAaS,aAAc,CAACL,KAAKL,MAAMjG,SAAU4G,KAAK,cACrG,kBAAC,KAAKxG,KAAN,MACA,kBAAC,KAAKA,KAAN,MACA,kBAAC,KAAKA,KAAN,CAAWf,IAAI,QACX,kBAAC,IAAD,CAAMjE,GAAG,KACL,kBAAC,IAAD,CAAMQ,KAAK,SADf,SAKJ,kBAACgK,GAAD,CAAStK,MAAO,0BAAMC,UAAU,yBAAwB,kBAAC,IAAD,CAAMK,KAAK,UAAnD,UACXiL,GAAcP,KAAKhO,QAExB,kBAAC,KAAK8H,KAAN,CAAWf,IAAI,cACX,kBAAC,IAAD,CAAMjE,GAAG,KACL,kBAAC,IAAD,CAAMQ,KAAK,eADf,kBAKJ,kBAAC,KAAKwE,KAAN,CAAWf,IAAI,QACX,kBAAC,IAAD,CAAMjE,GAAG,KACL,kBAAC,IAAD,CAAMQ,KAAK,SADf,gBAMJ,kBAACkK,GAAD,CAAoBhH,UAAQ,GACxB,kBAACuF,GAAD,Y,GA7CWyC,IAAMC,WAqD/BF,GAAgB,SAAC,GAAmB,IAAjBL,EAAgB,EAAhBA,UACrB,OACI,kBAAC,KAAKQ,UAAN,CAAgB3H,IAAI,SAEZmH,EAAU/L,KAAI,SAACC,EAAOC,GAClB,OAAIA,GAASsM,KAAKC,MAAMV,EAAU9G,OAAS,GAAW,KAElD,kBAAC,KAAKU,KAAN,CAAWf,IAAG,gBAAW3E,EAAMW,KAAOX,EAAMyE,SAIxD,kBAACyG,GAAD,CAASvG,IAAI,OAAO/D,MAAM,QACrBkL,EAAU/L,KAAI,SAACC,EAAOC,GACnB,OAAIA,EAAQsM,KAAKC,MAAMV,EAAU9G,OAAS,GAAW,KAEjD,kBAAC,KAAKU,KAAN,CAAWf,IAAG,gBAAW3E,EAAMW,KAAOX,EAAMyE,YAY9DgI,GAAUnF,aAJQ,SAAC,GACrB,MAAO,CAAEwE,UAD8B,EAAhBA,aAIc,CAAED,WF7GjB,yDAAM,WAAOtK,GAAP,eAAAC,EAAA,sEACLlD,EAAMmD,IAAI,oBAAqB,CAAE9C,OAAQ,CAAE+C,QAAS,sCAD/C,OACtBC,EADsB,OAE5BJ,EAAS,CACLL,KAAME,EACNQ,QAASD,EAASxB,KAAKuM,SAJC,2CAAN,wDE6GVpF,CAAyCgE,IClH5CqB,GACK,eADLA,GAEC,WAFDA,GAGI,cAHJA,GAIE,YAJFA,GAKS,mB,8FCMtB,IAAMC,GAAW5N,IAAOC,IAAV,MA0DR4N,GAAWvF,aAJO,SAAC,GACrB,MAAO,CAAEwF,cADiG,EAAnFA,cACCC,iBADkF,EAApEA,iBACIC,gBADgE,EAAlDA,gBACGC,WAD+C,EAAjCA,WACFC,eADmC,EAArBA,kBAKrF,CACI7L,sBAAoBa,mBACpBE,kBAAgBD,uBAAqBE,wBAH5BiF,EAtDgB,SAAC1J,GAAW,IAErCkP,EAIAlP,EAJAkP,cAAeC,EAIfnP,EAJemP,iBACfC,EAGApP,EAHAoP,gBAAiBC,EAGjBrP,EAHiBqP,WAAYC,EAG7BtP,EAH6BsP,eAC7B7L,EAEAzD,EAFAyD,mBAAoBa,EAEpBtE,EAFoBsE,gBACpBE,EACAxE,EADAwE,eAAgBD,EAChBvE,EADgBuE,oBAAqBE,EACrCzE,EADqCyE,oBASzC,OAPAiB,qBAAU,WACNjC,EAAmB,GACnBa,EAAgB,GAChBC,EAAoB,GACpBC,EAAe,GACfC,MACD,IAEC,6BACI,kBAACoK,GAAD,MACA,kBAACG,GAAD,MACA,kBAAC,EAAD,CACIzM,KAAM2M,EACNlM,MAAM,eACNK,QAAO,qBAAgB0L,GAAhB,YAAsD,UAC7D7M,SAAU,CAAC,SAAU,QAAS,SAAU,YAC5C,kBAAC,EAAD,CACIK,KAAM+M,EACNtM,MAAM,WACNK,QAAO,qBAAgB0L,GAAhB,YAAkD,UACzD7M,SAAU,CAAC,SAAU,QAAS,SAAU,YAC5C,kBAAC,EAAD,CACIK,KAAM4M,EACNnM,MAAM,cACNK,QAAO,qBAAgB0L,GAAhB,YAAqD,UAC5D7M,SAAU,CAAC,SAAU,QAAS,SAAU,YAE5C,kBAAC,EAAD,CACIK,KAAM6M,EACNpM,MAAM,YACNK,QAAO,qBAAgB0L,GAAhB,YAAmD,UAC1D7M,SAAU,CAAC,SAAU,QAAS,SAAU,YAC5C,kBAAC,EAAD,CACIM,SAAS,EACTD,KAAM8M,EACNrM,MAAM,mBACNK,QAAO,qBAAgB0L,GAAhB,YAA0D,MACjE7M,SAAU,CAAC,SAAU,QAAS,gB,+FCvC9C,IAAMiH,GAAU/H,IAAOC,IAAV,MAIb,SAASkO,GAAUvP,EAAOwP,EAAaC,GAAU,IAEzChM,EAEAzD,EAFAyD,mBAAoBa,EAEpBtE,EAFoBsE,gBACpBE,EACAxE,EADAwE,eAAgBD,EAChBvE,EADgBuE,oBAAqBE,EACrCzE,EADqCyE,oBAGzC,QADW+K,EAAYE,MAAQ,IAClBC,eACT,KAAKZ,GACDtL,EAAmBgM,GACnB,MACJ,KAAKV,GACDzK,EAAgBmL,GAChB,MACJ,KAAKV,GACDvK,EAAeiL,GACf,MACJ,KAAKV,GACDtK,EAAoBgL,GACpB,MACJ,KAAKV,GACDxK,EAAoBkL,IAOhC,SAASG,GAAiB5P,EAAOwP,GAAc,IAEvCN,EAEAlP,EAFAkP,cAAeC,EAEfnP,EAFemP,iBACfC,EACApP,EADAoP,gBAAiBC,EACjBrP,EADiBqP,WAAYC,EAC7BtP,EAD6BsP,eAGjC,QADWE,EAAYE,MAAQ,IAClBC,eACT,KAAKZ,GACD,OAAOG,EACX,KAAKH,GACD,OAAOI,EACX,KAAKJ,GACD,OAAOM,EACX,KAAKN,GACD,OAAOO,EACX,KAAKP,GACD,OAAOK,EACX,QACI,MAAO,IAInB,SAAS/F,KACL,OAAO,IAAIC,gBAAgBC,cAAcC,QAE7C,IAsCMqG,GAAenG,aANG,SAAC,GAGrB,MAAO,CAAEwF,cADwB,EAFVA,cAGCC,iBADS,EAFKA,iBAGIC,gBADT,EADjCA,gBAE2DC,WAD1B,EADhBA,WAEsDC,eADtC,EAAjCA,eACuF9J,WADtD,EAAjBA,cAKhB,CACI/B,sBAAoBa,mBACpBE,kBAAgBD,uBAAqBE,wBAHxBiF,EAtCS,SAAC1J,GAEVuJ,cAAjB,IACImG,EAAOrG,KAAWxF,IAAI,QACtBiM,EAAUzG,KAAWxF,IAAI,WAEzB2B,EACAxF,EADAwF,WAGJE,qBAAU,WACN6J,GAAUvP,EAAO,CAAE0P,OAAMI,WAAW,KACrC,IAMH,OACI,kBAAC,GAAD,KACI,kBAAC,IAAD,CACI7P,MAAO,CAAEwK,OAAQ,gCACjBC,OAAQ,kBAAM1K,EAAM2K,QAAQC,UAC5B5H,MAAK,UAAK0M,EAAKK,qBACflF,SAAQ,UAAKiF,EAAQC,uBACzB,kBAAC,GAAD,CAAgBvK,WAAYA,EACxBK,aAZS,SAAU4J,GAC3BF,GAAUvP,EAAO,CAAE0P,OAAMI,WAAWL,IAWAlN,KAAMqN,GAAiB5P,EAAO,CAAE0P,OAAMI,kB,SCzFnEE,gBAAgB,CAC3B9B,UCT4B,WAAyB,IAAxBP,EAAuB,uDAAf,GAAIsC,EAAW,uCAEpD,OADApC,QAAQC,IAAImC,EAAOjM,SACfiM,EAAO3M,OAASE,EACT,aAAIyM,EAAOjM,SAEf2J,GDKP3B,eCDiC,WAAyB,IAAxB2B,EAAuB,uDAAf,GAAIsC,EAAW,uCACzD,OAAIA,EAAO3M,OAASE,EACT0M,KAAEC,OAAF,uBAAaF,EAAOjM,SAApB,aAAgC2J,IAAQ,MAE5CA,GDFPuB,cEXgC,WAAyB,IAAxBvB,EAAuB,uDAAf,GAAIsC,EAAW,uCACxD,OAAIA,EAAO3M,OAASE,GACT0M,KAAEC,OAAF,uBAAaxC,GAAb,aAAuBsC,EAAOjM,UAAU,MAC1CoM,MAAK,uBAAGxL,QAAH,EAA0BA,WAEjC+I,GFOPwB,iBEJmC,WAAyB,IAAxBxB,EAAuB,uDAAf,GAAIsC,EAAW,uCAC3D,OAAIA,EAAO3M,OAASE,EACT0M,KAAEC,OAAF,uBAAaxC,GAAb,aAAuBsC,EAAOjM,UAAU,MAC1CoM,MAAK,uBAAGxL,QAAH,EAA0BA,WAEjC+I,GFAPyB,gBEGiC,WAAyB,IAAxBzB,EAAuB,uDAAf,GAAIsC,EAAW,uCACzD,OAAIA,EAAO3M,OAASE,GACT0M,KAAEC,OAAF,uBAAaxC,GAAb,aAAuBsC,EAAOjM,UAAU,MAC1CoM,MAAK,uBAAGxL,QAAH,EAA0BA,WAEjC+I,GFPP0B,WEU4B,WAAyB,IAAxB1B,EAAuB,uDAAf,GAAIsC,EAAW,uCACpD,OAAIA,EAAO3M,OAASE,GACT0M,KAAEC,OAAF,uBAAaxC,GAAb,aAAuBsC,EAAOjM,UAAU,MAC1CoM,MAAK,uBAAGxL,QAAH,EAA0BA,WAEjC+I,GFdPhE,aGf+B,WAAyB,IAAxBgE,EAAuB,uDAAf,GAAIsC,EAAW,uCACvD,OAAIA,EAAO3M,OAASE,GACT,eAAKyM,EAAOjM,SAEhB2J,GHYP/D,cGRgC,WAAyB,IAAxB+D,EAAuB,uDAAf,GAAIsC,EAAW,uCACxD,OAAIA,EAAO3M,OAASE,GACT,aAAIyM,EAAOjM,SAEf2J,GHKP9D,WGF6B,WAAyB,IAAxB8D,EAAuB,uDAAf,GAAIsC,EAAW,uCACrD,OAAIA,EAAO3M,OAASE,GACT,aAAIyM,EAAOjM,SAEf2J,GHDP2B,eEciC,WAAyB,IAAxB3B,EAAuB,uDAAf,GAAIsC,EAAW,uCACzD,OAAIA,EAAO3M,OAASE,GACT0M,KAAEC,OAAF,uBAAaxC,GAAb,aAAuBsC,EAAOjM,UAAU,MAC1CoM,MAAK,uBAAGxL,QAAH,EAA0BA,WAEjC+I,GFlBP1G,YGI8B,WAAyB,IAAxB0G,EAAuB,uDAAf,GAAIsC,EAAW,uCACtD,OAAIA,EAAO3M,OAASE,GACT,aAAIyM,EAAOjM,SAEf2J,GHPP5C,aGmB+B,WAAyB,IAAxB4C,EAAuB,uDAAf,GAAIsC,EAAW,uCACvD,OAAIA,EAAO3M,OAASE,GACT,eAAKyM,EAAOjM,SAEhB2J,GHtBP3C,eGUkC,WAAyB,IAAxB2C,EAAuB,uDAAf,GAAIsC,EAAW,uCAC1D,OAAIA,EAAO3M,OAASE,GACT,aAAIyM,EAAOjM,SAEf2J,GHbPnI,WEkB6B,WAAkE,IAAjEmI,EAAgE,uDAAxD,CAAE1I,YAAa,EAAGb,MAAO,GAAIc,SAAU,IAAM+K,EAAW,uCAC9F,OAAIA,EAAO3M,MAAQE,GACR,eAAKmK,EAAZ,GAAsBsC,EAAOjM,SAE1B2J,KEVI0C,OAjBf,WACE,OACE,kBAAC,IAAD,CAAQC,SAAU,oBAEhB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxB,KACjC,kBAAC,IAAD,CAAOuB,KAAK,eAAeC,UAAWhH,KACtC,kBAAC,IAAD,CAAO+G,KAAK,cAAcC,UAAW3F,KACrC,kBAAC,IAAD,CAAO0F,KAAK,QAAQC,UAAWZ,KAC/B,kBAAC,IAAD,CAAOW,KAAK,OAAOC,UAAW1Q,IAC9B,kBAAC,IAAD,CAAU+C,GAAG,UAEf,yBAAKG,UAAU,UAAf,mECrBcyN,QACW,cAA7BC,OAAOrG,SAASsG,UAEe,UAA7BD,OAAOrG,SAASsG,UAEhBD,OAAOrG,SAASsG,SAASC,MACvB,2D,cCNNC,IAASC,OAAO,kBAAC,IAAD,CAAUC,MAAOC,aAAYC,GAAUC,aAAgBC,QACnE,kBAAC,GAAD,OACSC,SAASC,eAAe,SDqH/B,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.ba44b90e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Empty\n} from 'antd';\nexport const NotFoundPage = (props) => {\n    return (\n        <div style={{ height: '80vh', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n            <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n            <h3>Page not found ;(</h3>\n        </div>\n    );\n}","import axios from 'axios';\n//https://api.themoviedb.org/3/movie/550?api_key=b52327a9c201390c336b46ebee1c395b\nexport const https = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    timeout: 1000,\n    params: {\n        language: 'en-US'\n    }\n});\n\nexport const getImageUrl = (relativeUrl) => {\n    return `https://image.tmdb.org/t/p/original${relativeUrl}`;\n}\n","import React, { Component, Fragment } from 'react';\nimport { Button, Icon, Badge } from 'antd';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { getImageUrl } from '../https';\n\n\nconst DivContainer = styled.div`\n    width:100%;\n    margin-top:4em;\n    overflow: hidden;\n`\n\nconst DivSubcontainer = styled.div`\n    margin:.5em 6em;\n    display:flex;\n    justify-content:flex-start;\n    width:100%;\n`;\n\nconst DivTitle = styled.div`\n    width:100%;\n    display:flex;\n    font-size:26px;\n    color:#b1b1b1;\n    font-weight:700;\n    text-transform:uppercase;\n`;\n\nconst DivSubtitleList = styled.div`\n    flex:4;\n    display:flex;\n    justify-content:flex-start;\n    padding-top:6px;\n    padding-left:16px;\n   \n\n`\nconst Divsubtitle = styled.div`\n    font-size:14px;\n    color:#1890ff;\n    padding:8px;\n    padding-top:8px;\n    padding-bottom:0px;\n    border-bottom:1px solid transparent;\n    text-transform:capitalize;\n    cursor: pointer;\n    &:hover{\n        border-bottom:1px solid #1890ff;\n    }\n`;\nconst DivsubtitleLast = styled(Divsubtitle)`\n    flex:1;\n    margin-top:10px;\n    padding-right:16px;\n     &:hover{\n        border-bottom:1px solid transparent;\n    }\n`;\n\n\nconst DivImageList = styled.div`\n    overflow-x: auto;\n    width:100%;\n    display:flex;\n    padding-top: 14px;\n`;\n\nconst DivImageContainer = styled.div`\n    flex: 0 0 auto;\n    flex-shrink: 0;\n    width:300px;\n    height: 380px;\n    margin:32px;\n    margin-top:0px;\n    overflow:hidden;\n    position:relative;\n\n    border-radius:3px;\n    overflow:hidden;\n\n    margin-right:0px;\n`;\n\nconst DivImage = styled.img`\n    height: 100%;\n    width: 100%;\n    background-size:cover;\n    background-repeat: no-repeat;\n    background-position: center;\n    transition: all 0.6s ease;\n`;\nconst DivImageTitle = styled.div`\n    z-index: 10;\n    width:100%;\n    color: #fff;\n    font-size:16px;\n    margin:auto 8px;\n    overflow-wrap: break-word;\n    position:absolute;\n    \n    bottom: 8px;\n    display:flex;\n    justify-content:center;\n`;\n\n\nconst DivOverlay = styled.div`\n    height: 100%;\n    width: 100%;\n    z-index:5;\n    background:linear-gradient(0deg, rgba(0,0,0,0.8281687675070029) 0%, rgba(0,0,0,0.6348914565826331) 13%, rgba(255,255,255,0) 22%);\n    position:absolute;\n    top:0;\n`;\n\n\nconst RenderTopGenre = ({ topGenre = ['Action', 'Drama', 'Comedy', 'Horror'] }) => {\n    return (\n        <DivSubtitleList>\n            {\n                topGenre.map((genre, index) => {\n                    if (index > 5) return null\n                    return (\n                        <Divsubtitle>{genre}</Divsubtitle>\n                    );\n                })\n            }\n        </DivSubtitleList>\n    );\n}\n\nconst RenderListItem = ({ data = [], isMovie = true }) => {\n    return data.map((item) => {\n        return (\n            <Badge count={item.vote_average} overflowCount={10} style={{ backgroundColor: '#FFA500' }} >\n                <Link to={`/details/${item.id}?isMovies=${isMovie}&title=${item.title || \"TV\"}`}>\n                    <DivImageContainer className='elevate-3'>\n                        <DivImage src={getImageUrl(item.poster_path)} />\n                        <DivImageTitle>\n                            <p>{item.title}</p>\n                        </DivImageTitle>\n                        <DivOverlay></DivOverlay>\n                    </DivImageContainer>\n                </Link>\n            </Badge>)\n    });\n}\n\nconst RenderMore = ({ moreUrl }) => {\n    return (moreUrl ?\n        (\n            <DivsubtitleLast>\n                <Link to={moreUrl} >\n                    <Button type=\"dashed\">\n                        More<Icon type=\"double-right\" />\n                    </Button>\n                </Link>\n            </DivsubtitleLast>\n        ) : null)\n}\n\n\nconst FeatureList = (props) => {\n    const { title, moreUrl, topGenre, data, isMovie } = props;\n    return (\n        <DivContainer>\n            <DivSubcontainer>\n                <DivTitle>\n                    <div>{title}</div>\n                    {topGenre && (<RenderTopGenre topGenre={topGenre} />)}\n                    <RenderMore moreUrl={moreUrl} />\n                </DivTitle>\n            </DivSubcontainer>\n            <DivImageList className=\"light-scroll\">\n                <RenderListItem data={data} isMovie={isMovie} />\n            </DivImageList>\n        </DivContainer>\n    );\n}\n\n\n\nexport { FeatureList }\n","export const ActionTypes = {\n    MENU_GENRE: 'MENU_GENRE',\n    MENU_SEARCH: ' MENU_SEARCH',\n    MOVIES_NOWPLAYING: 'MOVIES_NOWPLAYING',\n    MOVIES_MOSTPOPULAR: 'MOVIES_MOSTPOPULAR',\n    MOVIES_UPCOMING: 'MOVIES_UPCOMING',\n    TVS_MOSTPOPULAR: 'TVS_MOSTPOPULAR',\n    MOVIES_TRENDING: ' MOVIES_TRENDING',\n\n    MOVIE_DETAILS: 'MOVIE_DETAILS',\n    MOVIES_SIMILAR: 'MOVIES_SIMILAR',\n    TVS_SIMILAR: \"TVS_SIMILAR\",\n\n    MOVIE_ACTORS: 'MOVIES_ACTORS',\n    ACTOR_DETAILS: 'ACTOR_DETAILS',\n    ACTOR_ALL_MOVIES: 'ACTOR_ALL_MOVIES',\n\n    PAGINATION: 'PAGINATION'\n\n}","\nimport { https } from '../https';\nimport { ActionTypes } from '../actionTypes';\n\n\n\nexport const fetchPopularMovies = (page) => async (dispatch) => {\n    const response = await https.get('/movie/popular',\n        { params: { api_key: 'b52327a9c201390c336b46ebee1c395b', page } });\n    await dispatch({\n        type: ActionTypes.MOVIES_MOSTPOPULAR,\n        payload: setPageNum(response.data.results, page)\n    });\n    await dispatch(setPagination({ total: response.data.total_pages }))\n}\n\nexport const fetchNowPlaying = (page) => async (dispatch) => {\n    const response = await https.get('/movie/now_playing',\n        { params: { api_key: 'b52327a9c201390c336b46ebee1c395b', page } });\n    await dispatch({\n        type: ActionTypes.MOVIES_NOWPLAYING,\n        payload: setPageNum(response.data.results, page)\n    });\n    await dispatch(setPagination({ total: response.data.total_pages }))\n}\n\nexport const fetchUpcomingMovies = (page) => async (dispatch) => {\n    const response = await https.get('/movie/upcoming',\n        { params: { api_key: 'b52327a9c201390c336b46ebee1c395b', page } });\n    await dispatch({\n        type: ActionTypes.MOVIES_UPCOMING,\n        payload: setPageNum(response.data.results, page)\n    });\n    await dispatch(setPagination({ total: response.data.total_pages }))\n}\n\nexport const fetchPopularTv = (page) => async (dispatch) => {\n    const response = await https.get('/tv/popular',\n        { params: { api_key: 'b52327a9c201390c336b46ebee1c395b', page } });\n    await dispatch({\n        type: ActionTypes.TVS_MOSTPOPULAR,\n        payload: setPageNum(response.data.results, page)\n    });\n    await dispatch(setPagination({ total: response.data.total_pages }))\n}\n\nexport const fetchTrendingMovies = (page) => async (dispatch) => {\n    const response = await https.get('/trending/movie/day',\n        { params: { api_key: 'b52327a9c201390c336b46ebee1c395b', page } });\n    await dispatch({\n        type: ActionTypes.MOVIES_TRENDING,\n        payload: setPageNum(response.data.results, page)\n    });\n    await dispatch(setPagination({ total: response.data.total_pages }))\n}\n\n\nconst setPagination = (pageInfo) => async (dispatch) => {\n    dispatch({\n        type: ActionTypes.PAGINATION,\n        payload: pageInfo\n    });\n}\nconst setPageNum = (arr = [], pageNum) => {\n    return arr.map((item) => ({ ...item, pageNum }));\n}","import React, { Component, Fragment, useState, useEffect } from 'react';\nimport { Button, Icon, Badge, Pagination } from 'antd';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { getImageUrl } from '../https';\n\n\nconst MainDiv = styled.div`\n    max-width: 95%;\n    margin: 24px auto;\n    min-height:80vh;\n    \n`;\nconst ListContainerDiv = styled.div`\n    display:flex;\n    flex-direction:row;\n    flex-wrap:wrap;\n    justify-content:space-around;\n\n`;\n\nconst DivImageList = styled.div`\n    overflow-x: auto;\n    width:100%;\n    display:flex;\n    padding-top: 14px;\n`;\n\nconst DivImageContainer = styled.div`\n    flex: 0 0 auto;\n    flex-shrink: 0;\n    width:300px;\n    height: 380px;\n    margin:32px;\n    margin-top:0px;\n    overflow:hidden;\n    position:relative;\n\n    border-radius:3px;\n    overflow:hidden;\n\n    margin-right:0px;\n`;\n\nconst DivImage = styled.img`\n    height: 100%;\n    width: 100%;\n    background-size:cover;\n    background-repeat: no-repeat;\n    background-position: center;\n    transition: all 0.6s ease;\n`;\nconst DivImageTitle = styled.div`\n    z-index: 10;\n    width:100%;\n    color: #fff;\n    font-size:16px;\n    margin:auto 8px;\n    overflow-wrap: break-word;\n    position:absolute;\n    \n    bottom: 8px;\n    display:flex;\n    justify-content:center;\n`;\n\n\nconst DivOverlay = styled.div`\n    height: 100%;\n    width: 100%;\n    z-index:5;\n    background:linear-gradient(0deg, rgba(0,0,0,0.8281687675070029) 0%, rgba(0,0,0,0.6348914565826331) 13%, rgba(255,255,255,0) 22%);\n    position:absolute;\n    top:0;\n`;\n\nconst DivPaginationContainer = styled.div`\n    width:100%;\n    margin-top:64px;\n    display:flex;\n    justify-content:center;\n`;\n\nconst RenderListItem = ({ data = [], isMovie = true, paging }) => {\n    const { currentPage, total, pageSize } = paging;\n    return data.map((item, i) => {\n        const limit = currentPage * pageSize;\n        const lastLimit = (currentPage - 1) * pageSize;\n        let index = item.pageNum * pageSize;\n        /** Only display current page content **/\n        if (!(index <= limit && index > lastLimit)) return null;\n        // if (!(index <= limit && item.pageNum == currentPage)) return null;\n        return (\n            <Badge count={item.vote_average} overflowCount={10} style={{ backgroundColor: '#FFA500' }} >\n                <Link to={`/details/${item.id}?isMovies=${isMovie}&title=${item.title || \"TV\"}`}>\n                    <DivImageContainer className='elevate-3'>\n                        <DivImage src={getImageUrl(item.poster_path)} />\n                        <DivImageTitle>\n                            <p>{item.title}</p>\n                        </DivImageTitle>\n                        <DivOverlay></DivOverlay>\n                    </DivImageContainer>\n                </Link>\n            </Badge>)\n    });\n}\n\n\nconst PaginationList = (props) => {\n    const [paging, setPaging] = useState(props.pagination);\n    useEffect(() => {\n        setPaging({ ...paging, total: props.pagination.total })\n    }, [props.pagination])\n    const onPageChage = (page, pageSize) => {\n        setPaging({ ...paging, currentPage: page })\n        props.onPageChange(page);\n    }\n    return (\n        <MainDiv>\n            <ListContainerDiv>\n                <RenderListItem data={props.data} paging={paging} />\n            </ListContainerDiv>\n            <DivPaginationContainer>\n                <Pagination size=\"large\" onChange={onPageChage}\n                    defaultPageSize={paging.pageSize} defaultCurrent={paging.currentPage} total={paging.total} />\n            </DivPaginationContainer>\n        </MainDiv>\n    );\n}\n\n\nexport { PaginationList };\n\n\n","\nimport React from 'react';\nimport styled from 'styled-components';\n\n\nexport const DivContainer = styled.div`\n    width:70%;\n    min-width:1140px;\n    height:60vh;\n    position:relative;\n    display:flex;\n    margin-top:8em;\n    margin-bottom:.2em;\n`\n\n/** content design **/\nexport const SectionImage = styled.div`\n    position:absolute;\n    top:-20%;\n`\n\nexport const DivImageContainer = styled.div`\n    flex: 0 0 auto;\n    flex-shrink: 0;\n    width:300px;\n    height: 380px;\n    margin:32px;\n    margin-top:0px;\n    overflow:hidden;\n    position:relative;\n\n    border-radius:3px;\n    overflow:hidden;\n\n    margin-right:0px;\n`;\n\nexport const DivImage = styled.img`\n    height: 100%;\n    width: 100%;\n    background-size:cover;\n    background-repeat: no-repeat;\n    background-position: center;\n    transition: all 0.6s ease;\n`;\nexport const DivImageTitle = styled.div`\n    z-index: 10;\n    width:100%;\n    color: #fff;\n    font-size:16px;\n    margin:auto 8px;\n    overflow-wrap: break-word;\n    position:absolute;\n    \n    bottom: 8px;\n    display:flex;\n    justify-content:center;\n`;\n\n\nexport const DivOverlay = styled.div`\n    height: 100%;\n    width: 100%;\n    z-index:5;\n    background:linear-gradient(0deg, rgba(0,0,0,0.8281687675070029) 0%, rgba(0,0,0,0.6348914565826331) 13%, rgba(255,255,255,0) 22%);\n    position:absolute;\n    top:0;\n`;\n\n/** Description Design **/\nexport const DivSplitOne = styled.div`\n    flex:1;\n    min-width:350px;\n`;\n\nexport const DivSplitTwo = styled.div`\n    flex:3;\n    overflow-y:auto;\n    margin:32px 32px;\n`;","import React, { Component, useEffect } from 'react';\nimport {\n    Link,\n    useParams,\n    Redirect,\n    useLocation\n} from \"react-router-dom\";\nimport { Descriptions, Icon, Rate, Tag } from 'antd';\nimport styled from 'styled-components';\nimport moment from 'moment'\n\nimport { getImageUrl } from '../https';\n\n\nimport {\n    SectionImage, DivImageContainer, DivImage, DivImageTitle,\n    DivOverlay, DivContainer, DivSplitOne, DivSplitTwo\n} from './details.style';\n\n\nconst parseCountry = (data) => {\n    if (data.production_countries && data.production_countries.length > 0) {\n        return data.production_countries[0].name;\n    }\n    return null;\n}\n\nfunction getTimeFromMins(mins) {\n    if (mins >= 24 * 60 || mins < 0) {\n        throw new RangeError(\"Valid input should be greater than or equal to 0 and less than 1440.\");\n    } else if (mins < 60) {\n        return \"Less than hour\"\n    }\n    var h = mins / 60 | 0,\n        m = mins % 60 | 0;\n    return moment.utc().hours(h).minutes(m).format(\"hh:mm\");\n}\n\n\nconst MovieCard = (props) => {\n    const { imgUrl, title, rate } = props;\n    return (\n        <SectionImage>\n            <DivImageContainer className='elevate-3'>\n                <DivImage src={getImageUrl(imgUrl)} />\n                <DivImageTitle>\n                    <p>{title}</p>\n                </DivImageTitle>\n                <DivOverlay></DivOverlay>\n            </DivImageContainer>\n            <Rate style={{ marginLeft: '30px' }} count={10} value={rate} disabled />\n            <span className=\"ant-rate-text\"><Tag color=\"gold\">{rate}</Tag></span>\n        </SectionImage>\n    );\n\n}\n\nconst ActorList = (props) => {\n    const { actors } = props;\n    return actors.map(actor => {\n        return (\n            <Link to={`/actors/${actor.id}?name=${actor.name}`}>\n                <Tag style={{ cursor: 'pointer' }} key={actor.id} color=\"blue\">{actor.name}</Tag>\n            </Link>\n        );\n    })\n}\n\nfunction getEpisodesAverageRuntime(arrTimes = [1]) {\n    return arrTimes.reduce((accum, current) => accum + current, 0) / arrTimes.length;\n};\nconst ContentDetails = (props) => {\n\n    const { data, movieActors } = props\n    const country = parseCountry(data);\n\n    const runtime = data.runtime || getEpisodesAverageRuntime(data.episode_run_time)\n    return (\n        <DivContainer className=\"elevate-1\">\n            <DivSplitOne>\n                <MovieCard title={data.title || data.name} imgUrl={data.poster_path} rate={data.vote_average} />\n            </DivSplitOne>\n            <DivSplitTwo>\n                <Descriptions title={data.title || data.name}>\n                    {data.tagline && (<Descriptions.Item label=\"Headline\">{data.tagline}</Descriptions.Item>)}\n                    <Descriptions.Item label={<spn><Icon type=\"clock-circle\" /> &nbsp; Length</spn>}>\n                        <span className=\"submenu-title-wrapper\">{getTimeFromMins(runtime)}</span>\n                    </Descriptions.Item>\n                    {country && (<Descriptions.Item label=\"Production country\">{country}</Descriptions.Item>)}\n                    <Descriptions.Item label=\"Release Date\">{moment(data.release_date).format(\"MMMM Do YYYY\")}</Descriptions.Item>\n                    {data.seasons && (<Descriptions.Item label=\"# seasons\" >{data.seasons.length}</Descriptions.Item>)}\n                </Descriptions>\n                <Descriptions title={'Overview'} >\n                    <Descriptions.Item label=\"\">{data.overview}</Descriptions.Item>\n                </Descriptions>\n                <Descriptions title={'Cast'} >\n                    <Descriptions.Item label=\"\">\n                        <ActorList actors={movieActors} />\n                    </Descriptions.Item>\n                </Descriptions>\n            </DivSplitTwo>\n        </DivContainer>\n    );\n}\n\n\nexport { ContentDetails };","import React, { Component, useEffect } from 'react';\nimport {\n    Link,\n    useParams,\n    Redirect,\n    useLocation\n} from \"react-router-dom\";\nimport { Descriptions, Icon, Rate, Tag } from 'antd';\nimport styled from 'styled-components';\nimport moment from 'moment'\n\nimport { getImageUrl } from '../https';\n\nimport {\n    SectionImage, DivImageContainer, DivImage, DivImageTitle,\n    DivOverlay, DivContainer, DivSplitOne, DivSplitTwo\n} from './details.style';\n\n\n\nconst DivMainContainer = styled(DivContainer)`\n    height:40vh;\n`\n\nconst MovieCard = (props) => {\n    const { imgUrl, name } = props;\n    return (\n        <SectionImage>\n            <DivImageContainer className='elevate-3'>\n                <DivImage src={getImageUrl(imgUrl)} />\n                <DivImageTitle>\n                    <p>{name}</p>\n                </DivImageTitle>\n                <DivOverlay></DivOverlay>\n            </DivImageContainer>\n        </SectionImage>\n    );\n\n}\n\n\nconst ActorDetails = (props) => {\n    const { data } = props;\n    return (\n        <DivMainContainer className=\"elevate-1\">\n            <DivSplitOne>\n                <MovieCard name={data.name} imgUrl={data.profile_path} />\n            </DivSplitOne>\n            <DivSplitTwo>\n                <Descriptions title={data.name}>\n                    <Descriptions.Item label={<spn><Icon type=\"calendar\" /> &nbsp; Birthday</spn>}>\n                        <span className=\"submenu-title-wrapper\">{data.birthday}</span>\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"From\">{data.place_of_birth}</Descriptions.Item>\n                </Descriptions>\n                <Descriptions title={'About'} >\n                    <Descriptions.Item label=\"\">{data.biography}</Descriptions.Item>\n                </Descriptions>\n            </DivSplitTwo>\n        </DivMainContainer>\n    );\n}\n\n\nexport { ActorDetails };\n\n\n","import React, { Component, useEffect, useState } from 'react';\nimport {\n    useParams,\n    useLocation,\n} from \"react-router-dom\";\nimport { PageHeader } from 'antd';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\n\nimport { FeatureList } from '../featureList'\nimport { ContentDetails } from '../contentDetails';\nimport {\n    fetchMovieDetails, fetchTvDetails,\n    fetchSimilarMovies, fetchMovieActors, fetchSimilarTvs\n} from '../contentDetails'\n\n\n\n\n\n/** container design **/\nconst DivMain = styled.div`\noverflow:hidden;\n`\n\nconst DivBody = styled.div`\n    width: 100%;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    overflow-x:auto;\n`\n\n\n\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\n\nexport const MovieDetailsPageComponent = (props) => {\n    const { id } = useParams();\n    const location = useLocation();\n    let isMovies = useQuery().get('isMovies');\n    let title = useQuery().get('title');\n    const {\n        fetchMovieDetails, fetchTvDetails, fetchMovieActors, fetchSimilarTvs,\n        fetchSimilarMovies, movieDetails, similarMovies, movieActors, similarTvs\n    } = props;\n    let similarShowListData = isMovies == 'true' ? similarMovies : similarTvs;\n    useEffect(() => {\n        let isMovie = isMovies == 'true';\n        if (isMovie) {\n\n            fetchMovieDetails(id);\n            fetchSimilarMovies(id);\n        } else {\n\n            fetchSimilarTvs(id);\n            fetchTvDetails(id);\n        }\n        fetchMovieActors(id, isMovie);\n    }, [location]);\n\n\n    return (\n        <DivMain>\n            <PageHeader\n                style={{ border: '1px solid rgb(235, 237, 240)' }}\n                onBack={() => props.history.goBack()}\n                title=\"Details\"\n                subTitle={title}\n            />\n            <DivBody className=\"light-scroll\" >\n                <ContentDetails data={movieDetails} movieActors={movieActors} />\n                <FeatureList\n                    isMovie={isMovies == 'true'}\n                    data={similarShowListData}\n                    title={isMovies == 'true' ? \"Similar Movies\" : \"Similar TV Show\"} />\n            </DivBody>\n        </DivMain>\n    );\n}\n\n\n\nconst mapStateToProps = ({ movieDetails, similarMovies, movieActors, similarTvs }) => {\n    return { movieDetails, similarMovies, movieActors, similarTvs };\n}\n\nconst MovieDetailsPage = connect(mapStateToProps,\n    {\n        fetchMovieDetails, fetchTvDetails,\n        fetchSimilarMovies, fetchMovieActors, fetchSimilarTvs\n    })(MovieDetailsPageComponent)\nexport { MovieDetailsPage };","import { https } from '../https';\nimport { ActionTypes } from '../actionTypes';\n\n\n\nexport const fetchMovieDetails = (id) => async (dispatch) => {\n    const response = await https.get(`/movie/${id}`,\n        { params: { api_key: 'b52327a9c201390c336b46ebee1c395b' } });\n    dispatch({\n        type: ActionTypes.MOVIE_DETAILS,\n        payload: response.data\n    });\n}\n\nexport const fetchTvDetails = (id) => async (dispatch) => {\n    const response = await https.get(`/tv/${id}`,\n        { params: { api_key: 'b52327a9c201390c336b46ebee1c395b' } });\n    dispatch({\n        type: ActionTypes.MOVIE_DETAILS,\n        payload: response.data\n    });\n}\n\n\nexport const fetchSimilarMovies = (id) => async (dispatch) => {\n    const response = await https.get(`/movie/${id}/similar`,\n        { params: { api_key: 'b52327a9c201390c336b46ebee1c395b' } });\n    dispatch({\n        type: ActionTypes.MOVIES_SIMILAR,\n        payload: response.data.results\n    });\n}\n\nexport const fetchSimilarTvs = (id) => async (dispatch) => {\n    const response = await https.get(`/tv/${id}/similar`,\n        { params: { api_key: 'b52327a9c201390c336b46ebee1c395b' } });\n    dispatch({\n        type: ActionTypes.TVS_SIMILAR,\n        payload: response.data.results\n    });\n}\n\n\nexport const fetchMovieActors = (id, isMovie = true) => async (dispatch) => {\n    let url = isMovie ? `/movie/${id}/credits` : `/tv/${id}/credits`;\n\n    const response = await https.get(url,\n        { params: { api_key: 'b52327a9c201390c336b46ebee1c395b' } });\n    dispatch({\n        type: ActionTypes.MOVIE_ACTORS,\n        payload: response.data.cast\n    });\n};\n\nexport const fetcActorAllMovies = (id, isMovie = true) => async (dispatch) => {\n    let url = isMovie ? `/person/${id}/movie_credits` : `/person/${id}/tv_credits`;\n    const response = await https.get(url,\n        { params: { api_key: 'b52327a9c201390c336b46ebee1c395b' } });\n    dispatch({\n        type: ActionTypes.ACTOR_ALL_MOVIES,\n        payload: response.data.cast\n    });\n};\n\n\nexport const fetcActorDetails = (id) => async (dispatch) => {\n    const response = await https.get(`/person/${id}`,\n        { params: { api_key: 'b52327a9c201390c336b46ebee1c395b' } });\n\n\n    dispatch({\n        type: ActionTypes.ACTOR_DETAILS,\n        payload: response.data\n    });\n};\n\n\n\n\n","import React, { Component, useEffect, useState } from 'react';\nimport {\n    useParams,\n    useLocation,\n} from \"react-router-dom\";\nimport { PageHeader } from 'antd';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\n\n\nimport { FeatureList } from '../featureList';\nimport { ActorDetails, fetcActorDetails, fetcActorAllMovies } from '../contentDetails';\n\n\n\n/** container design **/\nconst DivMain = styled.div`\noverflow:hidden;\n`\n\nconst DivBody = styled.div`\n    width: 100%;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    overflow-x:auto;\n`\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nconst ActorDetailsPageComponent = (props) => {\n\n\n    const { id } = useParams();\n    const location = useLocation();\n    let name = useQuery().get('name');\n\n    const { actorAllMovies, actorDetails, fetcActorDetails, fetcActorAllMovies } = props;\n\n    useEffect(() => {\n\n        fetcActorDetails(id);\n        fetcActorAllMovies(id);\n\n\n    }, [location]);\n    return (\n        <DivMain>\n            <PageHeader\n                style={{ border: '1px solid rgb(235, 237, 240)' }}\n                onBack={() => props.history.goBack()}\n                title=\"Actor\"\n                subTitle={name}\n            />\n            <DivBody className=\"light-scroll\">\n                <ActorDetails data={actorDetails} />\n                <FeatureList\n                    data={actorAllMovies}\n                    title={`Movies by ${name}`} />\n            </DivBody>\n        </DivMain>\n    );\n}\n\n\nconst mapStateToProps = ({ actorDetails, actorAllMovies }) => {\n    return { actorDetails, actorAllMovies };\n}\n\nconst ActorDetailsPage = connect(mapStateToProps, { fetcActorDetails, fetcActorAllMovies })(ActorDetailsPageComponent)\nexport { ActorDetailsPage };","import React, { Component, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { AutoComplete, Button, Icon, Input } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { searchMovieByName } from './menu.action';\n\n\nconst { Option } = AutoComplete;\n\n\nconst debounce = function (callback, delayTime) {\n    let timer;\n    return function () {\n        clearTimeout(timer);\n        timer = setTimeout(() => {\n            callback.apply(this, arguments)\n        }, delayTime);\n    }\n};\n\nfunction renderOption(item) {\n    return (\n\n        <Option key={item.id} text={item.title}>\n            <Link to={`/details/${item.id}?isMovies=${true}&title=${item.title || \"TV\"}`}>\n                <div className=\"global-search-item\">\n                    <span className=\"global-search-item-desc\">\n\n                        {item.title}\n\n                    </span>\n                    <span className=\"global-search-item-count\"></span>\n                </div>\n            </Link>\n        </Option>\n    );\n}\n\nconst SearchBoxComponent = (props) => {\n    const { searchedMovies, searchMovieByName } = props;\n    return (\n        <AutoComplete\n            className=\"global-search\"\n            size=\"large\"\n            style={{ width: '100%' }}\n            dataSource={searchedMovies.map(renderOption)}\n            onSelect={(e) => ({})}\n            onSearch={debounce((query) => searchMovieByName(query), 300)}\n            placeholder=\"Search\"\n            optionLabelProp=\"text\"\n        >\n            <Input\n                suffix={\n                    <Button\n                        className=\"search-btn\"\n                        style={{ marginRight: -12 }}\n                        size=\"large\"\n                        type=\"default\"\n                    >\n                        <Icon type=\"search\" />\n                    </Button>\n                }\n            />\n        </AutoComplete>\n    );\n}\n\nconst mapStateToProps = ({ searchedMovies }) => {\n    return { searchedMovies };\n}\n\nconst SearchBox = connect(mapStateToProps, { searchMovieByName })(SearchBoxComponent)\nexport { SearchBox };","import { https } from '../https';\nimport { ActionTypes } from '../actionTypes';\n\n\n\nexport const fetchGenre = () => async (dispatch) => {\n    const response = await https.get('/genre/movie/list', { params: { api_key: 'b52327a9c201390c336b46ebee1c395b', } });\n    dispatch({\n        type: ActionTypes.MENU_GENRE,\n        payload: response.data.genres\n    });\n}\n\nexport const searchMovieByName = (query) => async (dispatch) => {\n    const response = await https.get('/search/movie',\n        {\n            params: {\n                api_key: 'b52327a9c201390c336b46ebee1c395b',\n                language: 'en-US',\n                query\n            }\n        });\n    dispatch({\n        type: ActionTypes.MENU_SEARCH,\n        payload: response.data.results\n    });\n}","import { css } from 'styled-components';\n\n/** For Responsie Design **/\nconst sizes = {\n    xxxl: 1300,\n    xxl: 1200,\n    xl: 1055,\n    md: 760,\n    sm: 480\n}\nexport default Object.keys(sizes).reduce((acc, label) => {\n    acc[label] = (...args) => css`\n      @media (max-width: ${sizes[label]}px) {\n         ${css(...args)};\n      }\n   `\n    return acc\n}, {})","import React from 'react';\n\nimport { Menu, Icon } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { fetchGenre } from './menu.action';\nimport { SearchBox } from './search.component'\nimport media from '../media'\nconst { SubMenu } = Menu;\n\n\nconst DivSearchContainer = styled(Menu.Item)`\n    width:580px;\n    margin-left:32px;\n     ${media.xxl`\n         width:482px;\n    `}\n    ${media.xl`\n         width:480px;\n         min-height:60px;\n    `}\n    ${media.md`\n        min-height:50px;\n        width:380px;\n    `}\n     ${media.sm`\n        min-height:50px;\n        width:280px;\n    `}\n`;\n\n\nclass TopMenuComponent extends React.Component {\n    state = {\n        current: 'home',\n    };\n\n    componentDidMount() {\n        this.props.fetchGenre();\n    }\n\n    handleClick = e => {\n        console.log('click ', e);\n        this.setState({\n            current: e.key,\n        });\n    };\n\n    render() {\n        const { menuGenre } = this.props;\n        return (\n            <Menu style={{ overflow: 'hidden' }} onClick={this.handleClick} selectedKeys={[this.state.current]} mode=\"horizontal\">\n                <Menu.Item />\n                <Menu.Item />\n                <Menu.Item key=\"home\">\n                    <Link to=\"/\">\n                        <Icon type=\"home\" />\n                        Home\n                    </Link>\n                </Menu.Item>\n                <SubMenu title={<span className=\"submenu-title-wrapper\"><Icon type=\"block\" />Genre</span>}>\n                    {GenreSubGroup(this.props)}\n                </SubMenu>\n                <Menu.Item key=\"nowPlaying\">\n                    <Link to=\"/\">\n                        <Icon type=\"pic-center\" />\n                        Now on cinema\n                    </Link>\n                </Menu.Item>\n                <Menu.Item key=\"fire\">\n                    <Link to=\"/\">\n                        <Icon type=\"fire\" />\n                        Most recent\n                    </Link>\n                </Menu.Item>\n\n                <DivSearchContainer disabled>\n                    <SearchBox />\n                </DivSearchContainer>\n            </Menu>\n        );\n    }\n}\n\n\nconst GenreSubGroup = ({ menuGenre }) => {\n    return (\n        <Menu.ItemGroup key=\"Genre\">\n            {\n                menuGenre.map((genre, index) => {\n                    if (index >= Math.floor(menuGenre.length / 2)) return null;\n                    return (\n                        <Menu.Item key={`Genre:${genre.id}`}>{genre.name}</Menu.Item>\n                    )\n                })\n            }\n            <SubMenu key=\"sub2\" title=\"More\">\n                {menuGenre.map((genre, index) => {\n                    if (index < Math.floor(menuGenre.length / 2)) return null;\n                    return (\n                        <Menu.Item key={`Genre:${genre.id}`}>{genre.name}</Menu.Item>\n                    )\n                })}\n            </SubMenu>\n        </Menu.ItemGroup>\n    );\n}\n\nconst mapStateToProps = ({ menuGenre }) => {\n    return { menuGenre };\n}\n\nconst TopMenu = connect(mapStateToProps, { fetchGenre })(TopMenuComponent)\nexport { TopMenu };\n","export const MoreviewTypes = {\n    MOST_POPULAR: 'MOST POPULAR',\n    TRENDING: 'TRENDING',\n    NOW_SHOWING: 'NOW SHOWING',\n    UP_COMING: 'UP COMING',\n    POPULAR_TV_SHOWS: 'POPULAR TV SHOWS'\n};\n\nexport const Genre = {\n    Action: 'Action',\n    Adventure: 'Adventure',\n    Animation: 'Animation',\n    Comedy: 'Comedy',\n    Crime: 'Crime',\n    Documentary: 'Documentary',\n    Drama: 'Drama',\n    Family: 'Family',\n    Fantasy: 'Fantasy',\n    History: 'History',\n    Horror: 'Horror',\n    Music: 'Music',\n    Mystery: 'Mystery',\n    Romance: 'Romance',\n    Science_Fiction: 'Science Fiction',\n    TV_Movie: 'TV Movie',\n    Thriller: 'Thriller',\n    War: 'War',\n    Western: 'Western'\n}","import React, { Component, useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport styled from 'styled-components';\nimport { TopMenu } from '../menu';\nimport {\n    FeatureList, fetchPopularMovies,\n    fetchNowPlaying, fetchPopularTv,\n    fetchUpcomingMovies, fetchTrendingMovies\n} from '../featureList';\n\nimport { MoreviewTypes, Genre } from '../moreviewTypes'\nconst SpaceTop = styled.div`\n    margin-top:4em;\n`\n\nexport const HomePageComponent = (props) => {\n    const {\n        popularMovies, nowPlayingMovies,\n        upcommingMovies, popularTVs, trendingMovies,\n        fetchPopularMovies, fetchNowPlaying,\n        fetchPopularTv, fetchUpcomingMovies, fetchTrendingMovies\n    } = props\n    useEffect(() => {\n        fetchPopularMovies(1);\n        fetchNowPlaying(1);\n        fetchUpcomingMovies(1);\n        fetchPopularTv(1);\n        fetchTrendingMovies();\n    }, [])\n    return (\n        <div>\n            <TopMenu />\n            <SpaceTop />\n            <FeatureList\n                data={popularMovies}\n                title=\"Most Popular\"\n                moreUrl={`/more?info=${MoreviewTypes.MOST_POPULAR}&subinfo=${\"movies\"}`}\n                topGenre={['Action', 'Drama', 'Comdey', 'Horror']} />\n            <FeatureList\n                data={trendingMovies}\n                title=\"Trending\"\n                moreUrl={`/more?info=${MoreviewTypes.TRENDING}&subinfo=${\"movies\"}`}\n                topGenre={['Action', 'Drama', 'Comdey', 'Horror']} />\n            <FeatureList\n                data={nowPlayingMovies}\n                title=\"Now showing\"\n                moreUrl={`/more?info=${MoreviewTypes.NOW_SHOWING}&subinfo=${\"movies\"}`}\n                topGenre={['Action', 'Drama', 'Comdey', 'Horror']} />\n\n            <FeatureList\n                data={upcommingMovies}\n                title=\"Up Coming\"\n                moreUrl={`/more?info=${MoreviewTypes.UP_COMING}&subinfo=${\"movies\"}`}\n                topGenre={['Action', 'Drama', 'Comdey', 'Horror']} />\n            <FeatureList\n                isMovie={false}\n                data={popularTVs}\n                title=\"Popular TV Shows\"\n                moreUrl={`/more?info=${MoreviewTypes.POPULAR_TV_SHOWS}&subinfo=${\"Tv\"}`}\n                topGenre={['Action', 'Drama', 'Comdey']} />\n        </div>\n    );\n}\n\n\nconst mapStateToProps = ({ popularMovies, nowPlayingMovies, upcommingMovies, popularTVs, trendingMovies }) => {\n    return { popularMovies, nowPlayingMovies, upcommingMovies, popularTVs, trendingMovies }\n}\n\nconst HomePage = connect(mapStateToProps,\n    {\n        fetchPopularMovies, fetchNowPlaying,\n        fetchPopularTv, fetchUpcomingMovies, fetchTrendingMovies\n    }\n)(HomePageComponent);\n\nexport { HomePage }\n","import React, { Component, useEffect, useState } from 'react';\nimport {\n    useParams,\n    useLocation,\n} from \"react-router-dom\";\nimport { PageHeader } from 'antd';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\n\nimport {\n    FeatureList, fetchPopularMovies,\n    fetchNowPlaying, fetchPopularTv,\n    fetchUpcomingMovies, fetchTrendingMovies, PaginationList\n} from '../featureList';\n\n\nimport { MoreviewTypes, Genre } from '../moreviewTypes';\n\n\n\nconst DivMain = styled.div`\n    overflow:hidden;\n`\n\nfunction fetchData(props, queryParams, pagenum) {\n    const {\n        fetchPopularMovies, fetchNowPlaying,\n        fetchPopularTv, fetchUpcomingMovies, fetchTrendingMovies\n    } = props\n    let info = queryParams.info || \"\";\n    switch (info.toUpperCase()) {\n        case MoreviewTypes.MOST_POPULAR:\n            fetchPopularMovies(pagenum);\n            break;\n        case MoreviewTypes.NOW_SHOWING:\n            fetchNowPlaying(pagenum);\n            break;\n        case MoreviewTypes.POPULAR_TV_SHOWS:\n            fetchPopularTv(pagenum);\n            break;\n        case MoreviewTypes.TRENDING:\n            fetchTrendingMovies(pagenum);\n            break;\n        case MoreviewTypes.UP_COMING:\n            fetchUpcomingMovies(pagenum);\n            break;\n        default:\n            break;\n    }\n}\n\nfunction selectDataSource(props, queryParams) {\n    const {\n        popularMovies, nowPlayingMovies,\n        upcommingMovies, popularTVs, trendingMovies,\n    } = props;\n    let info = queryParams.info || \"\";\n    switch (info.toUpperCase()) {\n        case MoreviewTypes.MOST_POPULAR:\n            return popularMovies;\n        case MoreviewTypes.NOW_SHOWING:\n            return nowPlayingMovies;\n        case MoreviewTypes.POPULAR_TV_SHOWS:\n            return popularTVs;\n        case MoreviewTypes.TRENDING:\n            return trendingMovies;\n        case MoreviewTypes.UP_COMING:\n            return upcommingMovies;\n        default:\n            return [];\n    }\n}\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\nconst MoreViewPageComponent = (props) => {\n\n    const location = useLocation();\n    let info = useQuery().get('info');\n    let subinfo = useQuery().get('subinfo');\n    const {\n        pagination\n    } = props;\n\n    useEffect(() => {\n        fetchData(props, { info, subinfo }, 1);\n    }, []);\n\n    const onPageChange = function (pagenum) {\n        fetchData(props, { info, subinfo }, pagenum);\n    }\n\n    return (\n        <DivMain>\n            <PageHeader\n                style={{ border: '1px solid rgb(235, 237, 240)' }}\n                onBack={() => props.history.goBack()}\n                title={`${info.toLocaleUpperCase()}`}\n                subTitle={`${subinfo.toLocaleUpperCase()}`} />\n            <PaginationList pagination={pagination}\n                onPageChange={onPageChange} data={selectDataSource(props, { info, subinfo })} />\n        </DivMain>\n    );\n}\n\n\n\nconst mapStateToProps = ({ popularMovies, nowPlayingMovies,\n    upcommingMovies, popularTVs,\n    trendingMovies, pagination }) => {\n    return { popularMovies, nowPlayingMovies, upcommingMovies, popularTVs, trendingMovies, pagination }\n}\n\nconst MoreViewPage = connect(mapStateToProps,\n    {\n        fetchPopularMovies, fetchNowPlaying,\n        fetchPopularTv, fetchUpcomingMovies, fetchTrendingMovies\n    }\n)(MoreViewPageComponent);\n\n\n\nexport { MoreViewPage }\n\n","import { combineReducers } from 'redux';\nimport { MenuGenreReducer, SearchedMoviesReducer } from './menu/menu.reducer';\nimport {\n    PopularMoviesReducer, NowPlayingMoviesReducer,\n    UpcomingMoviesReducer, PopularTVReducer, PaginationReducer,\n    TrendingMoviesReducer\n} from './featureList';\n\nimport { MovieDetailsReducer, SimilarMoviesReducer, MovieActorsReducer, ActorDetailsReducer, ActorsAllMoviesReducer, SimilarTvsReducer } from './contentDetails'\n\n\n\nexport default combineReducers({\n    menuGenre: MenuGenreReducer,\n    searchedMovies: SearchedMoviesReducer,\n    popularMovies: PopularMoviesReducer,\n    nowPlayingMovies: NowPlayingMoviesReducer,\n    upcommingMovies: UpcomingMoviesReducer,\n    popularTVs: PopularTVReducer,\n    movieDetails: MovieDetailsReducer,\n    similarMovies: SimilarMoviesReducer,\n    similarTvs: SimilarTvsReducer,\n    trendingMovies: TrendingMoviesReducer,\n    movieActors: MovieActorsReducer,\n    actorDetails: ActorDetailsReducer,\n    actorAllMovies: ActorsAllMoviesReducer,\n    pagination: PaginationReducer\n});","\nimport { ActionTypes } from '../actionTypes';\nimport _ from 'lodash';\n\nexport const MenuGenreReducer = (state = [], action) => {\n    console.log(action.payload)\n    if (action.type === ActionTypes.MENU_GENRE) {\n        return [...action.payload];\n    }\n    return state;\n}\n\n\nexport const SearchedMoviesReducer = (state = [], action) => {\n    if (action.type === ActionTypes.MENU_SEARCH) {\n        return _.uniqBy([...action.payload, ...state], \"id\");\n    }\n    return state;\n}","\nimport { ActionTypes } from '../actionTypes';\nimport _ from 'lodash';\n\nexport const PopularMoviesReducer = (state = [], action) => {\n    if (action.type === ActionTypes.MOVIES_MOSTPOPULAR) {\n        return _.uniqBy([...state, ...action.payload], \"id\")\n            .sort(({ pageNum: pageNumA }, { pageNum: pageNumB }) => pageNumA - pageNumB);\n    }\n    return state;\n}\n\nexport const NowPlayingMoviesReducer = (state = [], action) => {\n    if (action.type === ActionTypes.MOVIES_NOWPLAYING) {\n        return _.uniqBy([...state, ...action.payload], \"id\")\n            .sort(({ pageNum: pageNumA }, { pageNum: pageNumB }) => pageNumA - pageNumB);\n    }\n    return state;\n}\n\nexport const UpcomingMoviesReducer = (state = [], action) => {\n    if (action.type === ActionTypes.MOVIES_UPCOMING) {\n        return _.uniqBy([...state, ...action.payload], \"id\")\n            .sort(({ pageNum: pageNumA }, { pageNum: pageNumB }) => pageNumA - pageNumB);\n    }\n    return state;\n}\n\nexport const PopularTVReducer = (state = [], action) => {\n    if (action.type === ActionTypes.TVS_MOSTPOPULAR) {\n        return _.uniqBy([...state, ...action.payload], \"id\")\n            .sort(({ pageNum: pageNumA }, { pageNum: pageNumB }) => pageNumA - pageNumB);\n    }\n    return state;\n}\n\nexport const TrendingMoviesReducer = (state = [], action) => {\n    if (action.type === ActionTypes.MOVIES_TRENDING) {\n        return _.uniqBy([...state, ...action.payload], \"id\")\n            .sort(({ pageNum: pageNumA }, { pageNum: pageNumB }) => pageNumA - pageNumB);\n    }\n    return state;\n}\n\nexport const PaginationReducer = (state = { currentPage: 1, total: 16, pageSize: 16 }, action) => {\n    if (action.type == ActionTypes.PAGINATION) {\n        return { ...state, ...action.payload }\n    }\n    return state;\n}","\nimport { ActionTypes } from '../actionTypes';\nimport _ from 'lodash';\n\nexport const MovieDetailsReducer = (state = {}, action) => {\n    if (action.type === ActionTypes.MOVIE_DETAILS) {\n        return { ...action.payload }\n    }\n    return state;\n}\n\n\nexport const SimilarMoviesReducer = (state = [], action) => {\n    if (action.type === ActionTypes.MOVIES_SIMILAR) {\n        return [...action.payload];\n    }\n    return state;\n}\n\nexport const SimilarTvsReducer = (state = [], action) => {\n    if (action.type === ActionTypes.TVS_SIMILAR) {\n        return [...action.payload];\n    }\n    return state;\n}\n\n\nexport const MovieActorsReducer = (state = [], action) => {\n    if (action.type === ActionTypes.MOVIE_ACTORS) {\n        return [...action.payload];\n    }\n    return state;\n}\n\n\nexport const ActorsAllMoviesReducer = (state = [], action) => {\n    if (action.type === ActionTypes.ACTOR_ALL_MOVIES) {\n        return [...action.payload];\n    }\n    return state;\n}\n\n\nexport const ActorDetailsReducer = (state = {}, action) => {\n    if (action.type === ActionTypes.ACTOR_DETAILS) {\n        return { ...action.payload };\n    }\n    return state;\n}\n\n\n","import React from 'react';\nimport './sass/style.scss';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\n\nimport { NotFoundPage } from './Pages/NotFound.page';\nimport { MovieDetailsPage } from './Pages/MovieDetails.page';\nimport { ActorDetailsPage } from './Pages/ActorDetails.page'\nimport { HomePage } from './Pages/Home.page';\nimport { MoreViewPage } from './Pages/MoreView.page';\n\nimport reducers from './base.reducers'\n\n\n\n\nfunction App() {\n  return (\n    <Router basename={\"/movies-overflow\"}>\n\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/details/:id\" component={MovieDetailsPage} />\n        <Route path=\"/actors/:id\" component={ActorDetailsPage} />\n        <Route path=\"/more\" component={MoreViewPage} />\n        <Route path=\"/404\" component={NotFoundPage} />\n        <Redirect to=\"/404\" />\n      </Switch>\n      <div className=\"footer\"> Copyright © 2020-2021 MoviesOverflow All Rights Reserved </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n/** Redux Setup **/\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from './base.reducers';\nimport thunk from 'redux-thunk';\n\n\nReactDOM.render(<Provider store={createStore(reducers, applyMiddleware(thunk))}>\n    <App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}