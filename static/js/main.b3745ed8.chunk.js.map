{"version":3,"sources":["Pages/NotFound.page.js","https/index.js","featureList/featureList.component.js","actionTypes.js","contentDetails/details.style.js","contentDetails/contentDetails.component.js","contentDetails/actorDetails.component.js","Pages/MovieDetails.page.js","contentDetails/contentDetails.action.js","Pages/ActorDetails.page.js","menu/search.component.js","menu/menu.action.js","menu/menu.component.js","Pages/Home.page.js","featureList/featureList.action.js","base.reducers.js","menu/menu.reducer.js","featureList/featureList.reducer.js","contentDetails/contentDetails.reducer.js","App.js","serviceWorker.js","index.js"],"names":["NotFoundPage","props","style","height","display","flexDirection","justifyContent","alignItems","image","Empty","PRESENTED_IMAGE_SIMPLE","https","axios","create","baseURL","timeout","params","language","getImageUrl","relativeUrl","DivContainer","styled","div","DivSubcontainer","DivTitle","DivSubtitleList","Divsubtitle","DivsubtitleLast","DivImageList","DivImageContainer","DivImage","img","DivImageTitle","DivOverlay","RenderTopGenre","topGenre","map","genre","index","RenderListItem","data","isMovie","item","count","vote_average","overflowCount","backgroundColor","to","id","title","className","src","poster_path","RenderMore","moreUrl","type","FeatureList","ActionTypes","SectionImage","DivSplitOne","DivSplitTwo","MovieCard","imgUrl","rate","marginLeft","value","disabled","color","ActorList","actors","actor","name","cursor","key","ContentDetails","movieActors","Item","label","tagline","mins","RangeError","h","m","moment","utc","hours","minutes","format","getTimeFromMins","runtime","production_countries","length","parseCountry","release_date","overview","DivMainContainer","ActorDetails","profile_path","birthday","place_of_birth","biography","DivMain","DivBody","useQuery","URLSearchParams","useLocation","search","MovieDetailsPage","connect","movieDetails","similarMovies","fetchMovieDetails","dispatch","a","get","api_key","response","payload","fetchTvDetails","fetchSimilarMovies","results","fetchMovieActors","cast","useParams","location","isMovies","useEffect","border","onBack","history","push","subTitle","ActorDetailsPage","actorDetails","actorAllMovies","fetcActorDetails","fetcActorAllMovies","goBack","Option","AutoComplete","debounce","callback","delayTime","timer","clearTimeout","setTimeout","apply","arguments","renderOption","text","SearchBox","searchedMovies","searchMovieByName","query","size","width","dataSource","onSelect","e","onSearch","placeholder","optionLabelProp","suffix","marginRight","SubMenu","Menu","DivSearchContainer","TopMenuComponent","state","current","handleClick","console","log","setState","this","fetchGenre","menuGenre","overflow","onClick","selectedKeys","mode","GenreSubGroup","React","Component","ItemGroup","Math","floor","TopMenu","genres","SpaceTop","HomePage","popularMovies","nowPlayingMovies","upcommingMovies","popularTVs","trendingMovies","fetchPopularMovies","page","fetchNowPlaying","fetchPopularTv","fetchUpcomingMovies","fetchTrendingMovies","combineReducers","action","_","uniqBy","App","basename","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","store","createStore","reducers","applyMiddleware","thunk","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b3745ed8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Empty\n} from 'antd';\nexport const NotFoundPage = (props) => {\n    return (\n        <div style={{ height: '80vh', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n            <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n            <h3>Page not found ;(</h3>\n        </div>\n    );\n}","import axios from 'axios';\n//https://api.themoviedb.org/3/movie/550?api_key=b52327a9c201390c336b46ebee1c395b\nexport const https = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    timeout: 1000,\n    params: {\n        language: 'en-US'\n    }\n});\n\nexport const getImageUrl = (relativeUrl) => {\n    return `https://image.tmdb.org/t/p/original${relativeUrl}`;\n}\n","import React, { Component, Fragment } from 'react';\nimport { Button, Icon, Badge } from 'antd';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { getImageUrl } from '../https';\n\n\nconst DivContainer = styled.div`\n    width:100%;\n    margin-top:4em;\n    overflow: hidden;\n`\n\nconst DivSubcontainer = styled.div`\n    margin:.5em 6em;\n    display:flex;\n    justify-content:flex-start;\n    width:100%;\n`;\n\nconst DivTitle = styled.div`\n    width:100%;\n    display:flex;\n    font-size:26px;\n    color:#b1b1b1;\n    font-weight:700;\n    text-transform:uppercase;\n`;\n\nconst DivSubtitleList = styled.div`\n    flex:4;\n    display:flex;\n    justify-content:flex-start;\n    padding-top:6px;\n    padding-left:16px;\n   \n\n`\nconst Divsubtitle = styled.div`\n    font-size:14px;\n    color:#1890ff;\n    padding:8px;\n    padding-top:8px;\n    padding-bottom:0px;\n    border-bottom:1px solid transparent;\n    text-transform:capitalize;\n    cursor: pointer;\n    &:hover{\n        border-bottom:1px solid #1890ff;\n    }\n`;\nconst DivsubtitleLast = styled(Divsubtitle)`\n    flex:1;\n    margin-top:10px;\n    padding-right:16px;\n     &:hover{\n        border-bottom:1px solid transparent;\n    }\n`;\n\n\nconst DivImageList = styled.div`\n    overflow-x: auto;\n    width:100%;\n    display:flex;\n    padding-top: 14px;\n`;\n\nconst DivImageContainer = styled.div`\n    flex: 0 0 auto;\n    flex-shrink: 0;\n    width:300px;\n    height: 380px;\n    margin:32px;\n    margin-top:0px;\n    overflow:hidden;\n    position:relative;\n\n    border-radius:3px;\n    overflow:hidden;\n\n    margin-right:0px;\n`;\n\nconst DivImage = styled.img`\n    height: 100%;\n    width: 100%;\n    background-size:cover;\n    background-repeat: no-repeat;\n    background-position: center;\n    transition: all 0.6s ease;\n`;\nconst DivImageTitle = styled.div`\n    z-index: 10;\n    width:100%;\n    color: #fff;\n    font-size:16px;\n    margin:auto 8px;\n    overflow-wrap: break-word;\n    position:absolute;\n    \n    bottom: 8px;\n    display:flex;\n    justify-content:center;\n`;\n\n\nconst DivOverlay = styled.div`\n    height: 100%;\n    width: 100%;\n    z-index:5;\n    background:linear-gradient(0deg, rgba(0,0,0,0.8281687675070029) 0%, rgba(0,0,0,0.6348914565826331) 13%, rgba(255,255,255,0) 22%);\n    position:absolute;\n    top:0;\n`;\n\n\nconst RenderTopGenre = ({ topGenre = ['Action', 'Drama', 'Comedy', 'Horror'] }) => {\n    return (\n        <DivSubtitleList>\n            {\n                topGenre.map((genre, index) => {\n                    if (index > 5) return null\n                    return (\n                        <Divsubtitle>{genre}</Divsubtitle>\n                    );\n                })\n            }\n        </DivSubtitleList>\n    );\n}\n\nconst RenderListItem = ({ data = [], isMovie = true }) => {\n    return data.map((item) => {\n        return (\n            <Badge count={item.vote_average} overflowCount={10} style={{ backgroundColor: '#FFA500' }} >\n                <Link to={`/details/${item.id}?isMovies=${isMovie}&title=${item.title || \"TV\"}`}>\n                    <DivImageContainer className='elevate-3'>\n                        <DivImage src={getImageUrl(item.poster_path)} />\n                        <DivImageTitle>\n                            <p>{item.title}</p>\n                        </DivImageTitle>\n                        <DivOverlay></DivOverlay>\n                    </DivImageContainer>\n                </Link>\n            </Badge>)\n    });\n}\n\nconst RenderMore = ({ moreUrl }) => {\n    return (moreUrl ?\n        (\n            <DivsubtitleLast>\n                <Link to={moreUrl} >\n                    <Button type=\"dashed\">\n                        More<Icon type=\"double-right\" />\n                    </Button>\n                </Link>\n            </DivsubtitleLast>\n        ) : null)\n}\n\n\nconst FeatureList = (props) => {\n    const { title, moreUrl, topGenre, data, isMovie } = props;\n    return (\n        <DivContainer>\n            <DivSubcontainer>\n                <DivTitle>\n                    <div>{title}</div>\n                    {topGenre && (<RenderTopGenre topGenre={topGenre} />)}\n                    <RenderMore moreUrl={moreUrl} />\n                </DivTitle>\n            </DivSubcontainer>\n            <DivImageList className=\"light-scroll\">\n                <RenderListItem data={data} isMovie={isMovie} />\n            </DivImageList>\n        </DivContainer>\n    );\n}\n\n\n\nexport { FeatureList }\n","export const ActionTypes = {\n    MENU_GENRE: 'MENU_GENRE',\n    MENU_SEARCH: ' MENU_SEARCH',\n    MOVIES_NOWPLAYING: 'MOVIES_NOWPLAYING',\n    MOVIES_MOSTPOPULAR: 'MOVIES_MOSTPOPULAR',\n    MOVIES_UPCOMING: 'MOVIES_UPCOMING',\n    TVS_MOSTPOPULAR: 'TVS_MOSTPOPULAR',\n    MOVIES_TRENDING: ' MOVIES_TRENDING',\n\n    MOVIE_DETAILS: 'MOVIE_DETAILS',\n    MOVIES_SIMILAR: 'MOVIES_SIMILAR',\n\n    MOVIE_ACTORS: 'MOVIES_ACTORS',\n    ACTOR_DETAILS: 'ACTOR_DETAILS',\n    ACTOR_ALL_MOVIES: 'ACTOR_ALL_MOVIES'\n\n}","\nimport React from 'react';\nimport styled from 'styled-components';\n\n\nexport const DivContainer = styled.div`\n    width:70%;\n    min-width:1140px;\n    height:60vh;\n    position:relative;\n    display:flex;\n    margin-top:8em;\n    margin-bottom:.2em;\n`\n\n/** content design **/\nexport const SectionImage = styled.div`\n    position:absolute;\n    top:-20%;\n`\n\nexport const DivImageContainer = styled.div`\n    flex: 0 0 auto;\n    flex-shrink: 0;\n    width:300px;\n    height: 380px;\n    margin:32px;\n    margin-top:0px;\n    overflow:hidden;\n    position:relative;\n\n    border-radius:3px;\n    overflow:hidden;\n\n    margin-right:0px;\n`;\n\nexport const DivImage = styled.img`\n    height: 100%;\n    width: 100%;\n    background-size:cover;\n    background-repeat: no-repeat;\n    background-position: center;\n    transition: all 0.6s ease;\n`;\nexport const DivImageTitle = styled.div`\n    z-index: 10;\n    width:100%;\n    color: #fff;\n    font-size:16px;\n    margin:auto 8px;\n    overflow-wrap: break-word;\n    position:absolute;\n    \n    bottom: 8px;\n    display:flex;\n    justify-content:center;\n`;\n\n\nexport const DivOverlay = styled.div`\n    height: 100%;\n    width: 100%;\n    z-index:5;\n    background:linear-gradient(0deg, rgba(0,0,0,0.8281687675070029) 0%, rgba(0,0,0,0.6348914565826331) 13%, rgba(255,255,255,0) 22%);\n    position:absolute;\n    top:0;\n`;\n\n/** Description Design **/\nexport const DivSplitOne = styled.div`\n    flex:1;\n    min-width:350px;\n`;\n\nexport const DivSplitTwo = styled.div`\n    flex:3;\n    overflow-y:auto;\n    margin:32px 32px;\n`;","import React, { Component, useEffect } from 'react';\nimport {\n    Link,\n    useParams,\n    Redirect,\n    useLocation\n} from \"react-router-dom\";\nimport { Descriptions, Icon, Rate, Tag } from 'antd';\nimport styled from 'styled-components';\nimport moment from 'moment'\n\nimport { getImageUrl } from '../https';\n\n\nimport {\n    SectionImage, DivImageContainer, DivImage, DivImageTitle,\n    DivOverlay, DivContainer, DivSplitOne, DivSplitTwo\n} from './details.style';\n\n\nconst parseCountry = (data) => {\n    if (data.production_countries && data.production_countries.length > 0) {\n        return data.production_countries[0].name;\n    }\n    return null;\n}\n\nfunction getTimeFromMins(mins) {\n    if (mins >= 24 * 60 || mins < 0) {\n        throw new RangeError(\"Valid input should be greater than or equal to 0 and less than 1440.\");\n    }\n    var h = mins / 60 | 0,\n        m = mins % 60 | 0;\n    return moment.utc().hours(h).minutes(m).format(\"hh:mm\");\n}\n\n\nconst MovieCard = (props) => {\n    const { imgUrl, title, rate } = props;\n    return (\n        <SectionImage>\n            <DivImageContainer className='elevate-3'>\n                <DivImage src={getImageUrl(imgUrl)} />\n                <DivImageTitle>\n                    <p>{title}</p>\n                </DivImageTitle>\n                <DivOverlay></DivOverlay>\n            </DivImageContainer>\n            <Rate style={{ marginLeft: '30px' }} count={10} value={rate} disabled />\n            <span className=\"ant-rate-text\"><Tag color=\"gold\">{rate}</Tag></span>\n        </SectionImage>\n    );\n\n}\n\nconst ActorList = (props) => {\n    const { actors } = props;\n    return actors.map(actor => {\n        return (\n            <Link to={`/actors/${actor.id}?name=${actor.name}`}>\n                <Tag style={{ cursor: 'pointer' }} key={actor.id} color=\"blue\">{actor.name}</Tag>\n            </Link>\n        );\n    })\n}\n\n\nconst ContentDetails = (props) => {\n\n    const { data, movieActors } = props\n\n    return (\n        <DivContainer className=\"elevate-1\">\n            <DivSplitOne>\n                <MovieCard title={data.title} imgUrl={data.poster_path} rate={data.vote_average} />\n            </DivSplitOne>\n            <DivSplitTwo>\n                <Descriptions title={data.title}>\n                    <Descriptions.Item label=\"Headline\">{data.tagline}</Descriptions.Item>\n                    <Descriptions.Item label={<spn><Icon type=\"clock-circle\" /> &nbsp; Length</spn>}>\n                        <span className=\"submenu-title-wrapper\">{getTimeFromMins(data.runtime)}</span>\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Production country\">{parseCountry(data)}</Descriptions.Item>\n                    <Descriptions.Item label=\"Release Date\">{moment(data.release_date).format(\"MMMM Do YYYY\")}</Descriptions.Item>\n\n                </Descriptions>\n                <Descriptions title={'Overview'} >\n                    <Descriptions.Item label=\"\">{data.overview}</Descriptions.Item>\n                </Descriptions>\n                <Descriptions title={'Cast'} >\n                    <Descriptions.Item label=\"\">\n                        <ActorList actors={movieActors} />\n                    </Descriptions.Item>\n                </Descriptions>\n            </DivSplitTwo>\n        </DivContainer>\n    );\n}\n\n\nexport { ContentDetails };","import React, { Component, useEffect } from 'react';\nimport {\n    Link,\n    useParams,\n    Redirect,\n    useLocation\n} from \"react-router-dom\";\nimport { Descriptions, Icon, Rate, Tag } from 'antd';\nimport styled from 'styled-components';\nimport moment from 'moment'\n\nimport { getImageUrl } from '../https';\n\nimport {\n    SectionImage, DivImageContainer, DivImage, DivImageTitle,\n    DivOverlay, DivContainer, DivSplitOne, DivSplitTwo\n} from './details.style';\n\n\n\nconst DivMainContainer = styled(DivContainer)`\n    height:40vh;\n`\n\nconst MovieCard = (props) => {\n    const { imgUrl, name } = props;\n    return (\n        <SectionImage>\n            <DivImageContainer className='elevate-3'>\n                <DivImage src={getImageUrl(imgUrl)} />\n                <DivImageTitle>\n                    <p>{name}</p>\n                </DivImageTitle>\n                <DivOverlay></DivOverlay>\n            </DivImageContainer>\n        </SectionImage>\n    );\n\n}\n\n\nconst ActorDetails = (props) => {\n    const { data } = props;\n    return (\n        <DivMainContainer className=\"elevate-1\">\n            <DivSplitOne>\n                <MovieCard name={data.name} imgUrl={data.profile_path} />\n            </DivSplitOne>\n            <DivSplitTwo>\n                <Descriptions title={data.name}>\n                    <Descriptions.Item label={<spn><Icon type=\"calendar\" /> &nbsp; Birthday</spn>}>\n                        <span className=\"submenu-title-wrapper\">{data.birthday}</span>\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"From\">{data.place_of_birth}</Descriptions.Item>\n                </Descriptions>\n                <Descriptions title={'About'} >\n                    <Descriptions.Item label=\"\">{data.biography}</Descriptions.Item>\n                </Descriptions>\n            </DivSplitTwo>\n        </DivMainContainer>\n    );\n}\n\n\nexport { ActorDetails };\n\n\n","import React, { Component, useEffect, useState } from 'react';\nimport {\n    useParams,\n    useLocation,\n} from \"react-router-dom\";\nimport { PageHeader } from 'antd';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\n\nimport { FeatureList } from '../featureList'\nimport { ContentDetails } from '../contentDetails';\nimport { fetchMovieDetails, fetchTvDetails, fetchSimilarMovies, fetchMovieActors } from '../contentDetails'\n\n\n\n\n\n/** container design **/\nconst DivMain = styled.div`\noverflow:hidden;\n`\n\nconst DivBody = styled.div`\n    width: 100%;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    overflow-x:auto;\n`\n\n\n\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\n\nexport const MovieDetailsPageComponent = (props) => {\n    const { id } = useParams();\n    const location = useLocation();\n    let isMovies = useQuery().get('isMovies');\n    let title = useQuery().get('title');\n    const {\n        fetchMovieDetails, fetchTvDetails, fetchMovieActors,\n        fetchSimilarMovies, movieDetails, similarMovies, movieActors\n    } = props;\n    useEffect(() => {\n        isMovies == 'true' ? fetchMovieDetails(id) : fetchTvDetails(id);\n        fetchSimilarMovies(id);\n        fetchMovieActors(id);\n\n    }, [location]);\n    return (\n        <DivMain>\n            <PageHeader\n                style={{ border: '1px solid rgb(235, 237, 240)' }}\n                onBack={() => props.history.push(\"/\")}\n                title=\"Details\"\n                subTitle={title}\n            />\n            <DivBody className=\"light-scroll\" >\n                <ContentDetails data={movieDetails} movieActors={movieActors} />\n                <FeatureList\n                    data={similarMovies}\n                    title=\"Similar Movies\" />\n            </DivBody>\n        </DivMain>\n    );\n}\n\n\n\nconst mapStateToProps = ({ movieDetails, similarMovies, movieActors }) => {\n    return { movieDetails, similarMovies, movieActors };\n}\n\nconst MovieDetailsPage = connect(mapStateToProps,\n    {\n        fetchMovieDetails, fetchTvDetails,\n        fetchSimilarMovies, fetchMovieActors\n    })(MovieDetailsPageComponent)\nexport { MovieDetailsPage };","import { https } from '../https';\nimport { ActionTypes } from '../actionTypes';\n\n\n\nexport const fetchMovieDetails = (id) => async (dispatch) => {\n    const response = await https.get(`/movie/${id}`,\n        { params: { api_key: 'b52327a9c201390c336b46ebee1c395b' } });\n    dispatch({\n        type: ActionTypes.MOVIE_DETAILS,\n        payload: response.data\n    });\n}\n\nexport const fetchTvDetails = (id) => async (dispatch) => {\n    const response = await https.get(`/tv/${id}`,\n        { params: { api_key: 'b52327a9c201390c336b46ebee1c395b' } });\n    dispatch({\n        type: ActionTypes.MOVIE_DETAILS,\n        payload: response.data\n    });\n}\n\n\nexport const fetchSimilarMovies = (id) => async (dispatch) => {\n    const response = await https.get(`/movie/${id}/similar`,\n        { params: { api_key: 'b52327a9c201390c336b46ebee1c395b' } });\n    dispatch({\n        type: ActionTypes.MOVIES_SIMILAR,\n        payload: response.data.results\n    });\n}\n\n\nexport const fetchMovieActors = (id) => async (dispatch) => {\n    const response = await https.get(`/movie/${id}/credits`,\n        { params: { api_key: 'b52327a9c201390c336b46ebee1c395b' } });\n    dispatch({\n        type: ActionTypes.MOVIE_ACTORS,\n        payload: response.data.cast\n    });\n};\n\nexport const fetcActorAllMovies = (id) => async (dispatch) => {\n    const response = await https.get(`/person/${id}/movie_credits`,\n        { params: { api_key: 'b52327a9c201390c336b46ebee1c395b' } });\n    dispatch({\n        type: ActionTypes.ACTOR_ALL_MOVIES,\n        payload: response.data.cast\n    });\n};\n\n\nexport const fetcActorDetails = (id) => async (dispatch) => {\n    const response = await https.get(`/person/${id}`,\n        { params: { api_key: 'b52327a9c201390c336b46ebee1c395b' } });\n\n\n    dispatch({\n        type: ActionTypes.ACTOR_DETAILS,\n        payload: response.data\n    });\n};\n\n\n\n\n","import React, { Component, useEffect, useState } from 'react';\nimport {\n    useParams,\n    useLocation,\n} from \"react-router-dom\";\nimport { PageHeader } from 'antd';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\n\n\nimport { FeatureList } from '../featureList';\nimport { ActorDetails, fetcActorDetails, fetcActorAllMovies } from '../contentDetails';\n\n\n\n/** container design **/\nconst DivMain = styled.div`\noverflow:hidden;\n`\n\nconst DivBody = styled.div`\n    width: 100%;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    overflow-x:auto;\n`\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nconst ActorDetailsPageComponent = (props) => {\n\n\n    const { id } = useParams();\n    const location = useLocation();\n    let name = useQuery().get('name');\n\n    const { actorAllMovies, actorDetails, fetcActorDetails, fetcActorAllMovies } = props;\n\n    useEffect(() => {\n\n        fetcActorDetails(id);\n        fetcActorAllMovies(id);\n\n\n    }, [location]);\n    return (\n        <DivMain>\n            <PageHeader\n                style={{ border: '1px solid rgb(235, 237, 240)' }}\n                onBack={() => props.history.goBack()}\n                title=\"Actor\"\n                subTitle={name}\n            />\n            <DivBody className=\"light-scroll\">\n                <ActorDetails data={actorDetails} />\n                <FeatureList\n                    data={actorAllMovies}\n                    title={`Movies by ${name}`} />\n            </DivBody>\n        </DivMain>\n    );\n}\n\n\nconst mapStateToProps = ({ actorDetails, actorAllMovies }) => {\n    return { actorDetails, actorAllMovies };\n}\n\nconst ActorDetailsPage = connect(mapStateToProps, { fetcActorDetails, fetcActorAllMovies })(ActorDetailsPageComponent)\nexport { ActorDetailsPage };","import React, { Component, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { AutoComplete, Button, Icon, Input } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { searchMovieByName } from './menu.action';\n\n\nconst { Option } = AutoComplete;\n\n\nconst debounce = function (callback, delayTime) {\n    let timer;\n    return function () {\n        clearTimeout(timer);\n        timer = setTimeout(() => {\n            callback.apply(this, arguments)\n        }, delayTime);\n    }\n};\n\nfunction renderOption(item) {\n    return (\n\n        <Option key={item.id} text={item.title}>\n            <Link to={`/details/${item.id}?isMovies=${true}&title=${item.title || \"TV\"}`}>\n                <div className=\"global-search-item\">\n                    <span className=\"global-search-item-desc\">\n\n                        {item.title}\n\n                    </span>\n                    <span className=\"global-search-item-count\"></span>\n                </div>\n            </Link>\n        </Option>\n    );\n}\n\nconst SearchBoxComponent = (props) => {\n    const { searchedMovies, searchMovieByName } = props;\n    return (\n        <AutoComplete\n            className=\"global-search\"\n            size=\"large\"\n            style={{ width: '100%' }}\n            dataSource={searchedMovies.map(renderOption)}\n            onSelect={(e) => ({})}\n            onSearch={debounce((query) => searchMovieByName(query), 300)}\n            placeholder=\"input here\"\n            optionLabelProp=\"text\"\n        >\n            <Input\n                suffix={\n                    <Button\n                        className=\"search-btn\"\n                        style={{ marginRight: -12 }}\n                        size=\"large\"\n                        type=\"default\"\n                    >\n                        <Icon type=\"search\" />\n                    </Button>\n                }\n            />\n        </AutoComplete>\n    );\n}\n\nconst mapStateToProps = ({ searchedMovies }) => {\n    return { searchedMovies };\n}\n\nconst SearchBox = connect(mapStateToProps, { searchMovieByName })(SearchBoxComponent)\nexport { SearchBox };","import { https } from '../https';\nimport { ActionTypes } from '../actionTypes';\n\n\n\nexport const fetchGenre = () => async (dispatch) => {\n    const response = await https.get('/genre/movie/list', { params: { api_key: 'b52327a9c201390c336b46ebee1c395b', } });\n    dispatch({\n        type: ActionTypes.MENU_GENRE,\n        payload: response.data.genres\n    });\n}\n\nexport const searchMovieByName = (query) => async (dispatch) => {\n    const response = await https.get('/search/movie',\n        {\n            params: {\n                api_key: 'b52327a9c201390c336b46ebee1c395b',\n                language: 'en-US',\n                query\n            }\n        });\n    dispatch({\n        type: ActionTypes.MENU_SEARCH,\n        payload: response.data.results\n    });\n}","import React from 'react';\n\nimport { Menu, Icon } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { fetchGenre } from './menu.action';\nimport { SearchBox } from './search.component'\n\nconst { SubMenu } = Menu;\n\n\nconst DivSearchContainer = styled(Menu.Item)`\n    width:480px;\n    margin-left:10%;\n`;\n\n\nclass TopMenuComponent extends React.Component {\n    state = {\n        current: 'home',\n    };\n\n    componentDidMount() {\n        this.props.fetchGenre();\n    }\n\n    handleClick = e => {\n        console.log('click ', e);\n        this.setState({\n            current: e.key,\n        });\n    };\n\n    render() {\n        const { menuGenre } = this.props;\n        return (\n            <Menu style={{ overflow: 'hidden' }} onClick={this.handleClick} selectedKeys={[this.state.current]} mode=\"horizontal\">\n                <Menu.Item />\n                <Menu.Item />\n                <Menu.Item key=\"home\">\n                    <Link to=\"/\">\n                        <Icon type=\"home\" />\n                        Home\n                    </Link>\n                </Menu.Item>\n                <SubMenu title={<span className=\"submenu-title-wrapper\"><Icon type=\"block\" />Genre</span>}>\n                    {GenreSubGroup(this.props)}\n                </SubMenu>\n                <Menu.Item key=\"nowPlaying\">\n                    <Link to=\"/\">\n                        <Icon type=\"pic-center\" />\n                        Now on cinema\n                    </Link>\n                </Menu.Item>\n                <Menu.Item key=\"fire\">\n                    <Link to=\"/\">\n                        <Icon type=\"fire\" />\n                        Most recent\n                    </Link>\n                </Menu.Item>\n\n                <DivSearchContainer disabled>\n                    <SearchBox />\n                </DivSearchContainer>\n            </Menu>\n        );\n    }\n}\n\n\nconst GenreSubGroup = ({ menuGenre }) => {\n    return (\n        <Menu.ItemGroup key=\"Genre\">\n            {\n                menuGenre.map((genre, index) => {\n                    if (index >= Math.floor(menuGenre.length / 2)) return null;\n                    return (\n                        <Menu.Item key={`Genre:${genre.id}`}>{genre.name}</Menu.Item>\n                    )\n                })\n            }\n            <SubMenu key=\"sub2\" title=\"More\">\n                {menuGenre.map((genre, index) => {\n                    if (index < Math.floor(menuGenre.length / 2)) return null;\n                    return (\n                        <Menu.Item key={`Genre:${genre.id}`}>{genre.name}</Menu.Item>\n                    )\n                })}\n            </SubMenu>\n        </Menu.ItemGroup>\n    );\n}\n\nconst mapStateToProps = ({ menuGenre }) => {\n    return { menuGenre };\n}\n\nconst TopMenu = connect(mapStateToProps, { fetchGenre })(TopMenuComponent)\nexport { TopMenu };\n","import React, { Component, useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport styled from 'styled-components';\nimport { TopMenu } from '../menu';\nimport {\n    FeatureList, fetchPopularMovies,\n    fetchNowPlaying, fetchPopularTv,\n    fetchUpcomingMovies, fetchTrendingMovies\n} from '../featureList';\n\n\nconst SpaceTop = styled.div`\n    margin-top:4em;\n`\n\nexport const HomePageComponent = (props) => {\n    const {\n        popularMovies, nowPlayingMovies,\n        upcommingMovies, popularTVs, trendingMovies,\n        fetchPopularMovies, fetchNowPlaying,\n        fetchPopularTv, fetchUpcomingMovies, fetchTrendingMovies\n    } = props\n    useEffect(() => {\n        fetchPopularMovies(1);\n        fetchNowPlaying(1);\n        fetchUpcomingMovies(1);\n        fetchPopularTv(1);\n        fetchTrendingMovies();\n    }, [])\n    return (\n        <div>\n            <TopMenu />\n            <SpaceTop />\n            <FeatureList\n                data={popularMovies}\n                title=\"Most Popular\"\n                moreUrl={'/search/popular_movies'}\n                topGenre={['Action', 'Drama', 'Comdey', 'Horror']} />\n            <FeatureList\n                data={trendingMovies}\n                title=\"Trending\"\n                moreUrl={'/search/trending_movies'}\n                topGenre={['Action', 'Drama', 'Comdey', 'Horror']} />\n            <FeatureList\n                data={nowPlayingMovies}\n                title=\"Now showing\"\n                moreUrl={'/search/now_playing'}\n                topGenre={['Action', 'Drama', 'Comdey', 'Horror']} />\n\n            <FeatureList\n                data={upcommingMovies}\n                title=\"Up Coming\"\n                moreUrl={'/search/upcoming'}\n                topGenre={['Action', 'Drama', 'Comdey', 'Horror']} />\n            <FeatureList\n                isMovie={false}\n                data={popularTVs}\n                title=\"Popular TV Shows\"\n                moreUrl={'/search/popular_tv'}\n                topGenre={['Action', 'Drama', 'Comdey']} />\n        </div>\n    );\n}\n\n\nconst mapStateToProps = ({ popularMovies, nowPlayingMovies, upcommingMovies, popularTVs, trendingMovies }) => {\n    return { popularMovies, nowPlayingMovies, upcommingMovies, popularTVs, trendingMovies }\n}\n\nconst HomePage = connect(mapStateToProps,\n    {\n        fetchPopularMovies, fetchNowPlaying,\n        fetchPopularTv, fetchUpcomingMovies, fetchTrendingMovies\n    }\n)(HomePageComponent);\n\nexport { HomePage }\n","\nimport { https } from '../https';\nimport { ActionTypes } from '../actionTypes';\n\n\n\nexport const fetchPopularMovies = (page) => async (dispatch) => {\n    const response = await https.get('/movie/popular',\n        { params: { api_key: 'b52327a9c201390c336b46ebee1c395b', page } });\n    dispatch({\n        type: ActionTypes.MOVIES_MOSTPOPULAR,\n        payload: response.data.results\n    });\n}\n\nexport const fetchNowPlaying = (page) => async (dispatch) => {\n    const response = await https.get('/movie/now_playing',\n        { params: { api_key: 'b52327a9c201390c336b46ebee1c395b', page } });\n    dispatch({\n        type: ActionTypes.MOVIES_NOWPLAYING,\n        payload: response.data.results\n    });\n}\n\nexport const fetchUpcomingMovies = (page) => async (dispatch) => {\n    const response = await https.get('/movie/upcoming',\n        { params: { api_key: 'b52327a9c201390c336b46ebee1c395b', page } });\n    dispatch({\n        type: ActionTypes.MOVIES_UPCOMING,\n        payload: response.data.results\n    });\n}\n\nexport const fetchPopularTv = (page) => async (dispatch) => {\n    const response = await https.get('/tv/popular',\n        { params: { api_key: 'b52327a9c201390c336b46ebee1c395b', page } });\n    dispatch({\n        type: ActionTypes.TVS_MOSTPOPULAR,\n        payload: response.data.results\n    });\n}\n\nexport const fetchTrendingMovies = (page) => async (dispatch) => {\n    const response = await https.get('/trending/all/day',\n        { params: { api_key: 'b52327a9c201390c336b46ebee1c395b', page } });\n    dispatch({\n        type: ActionTypes.MOVIES_TRENDING,\n        payload: response.data.results\n    });\n}","import { combineReducers } from 'redux';\nimport { MenuGenreReducer, SearchedMoviesReducer } from './menu/menu.reducer';\nimport {\n    PopularMoviesReducer, NowPlayingMoviesReducer,\n    UpcomingMoviesReducer, PopularTVReducer,\n    TrendingMoviesReducer,\n} from './featureList';\n\nimport { MovieDetailsReducer, SimilarMoviesReducer, MovieActorsReducer, ActorDetailsReducer, ActorsAllMoviesReducer } from './contentDetails'\n\n\n\nexport default combineReducers({\n    menuGenre: MenuGenreReducer,\n    searchedMovies: SearchedMoviesReducer,\n    popularMovies: PopularMoviesReducer,\n    nowPlayingMovies: NowPlayingMoviesReducer,\n    upcommingMovies: UpcomingMoviesReducer,\n    popularTVs: PopularTVReducer,\n    movieDetails: MovieDetailsReducer,\n    similarMovies: SimilarMoviesReducer,\n    trendingMovies: TrendingMoviesReducer,\n    movieActors: MovieActorsReducer,\n    actorDetails: ActorDetailsReducer,\n    actorAllMovies: ActorsAllMoviesReducer\n});","\nimport { ActionTypes } from '../actionTypes';\nimport _ from 'lodash';\n\nexport const MenuGenreReducer = (state = [], action) => {\n    console.log(action.payload)\n    if (action.type === ActionTypes.MENU_GENRE) {\n        return [...action.payload];\n    }\n    return state;\n}\n\n\nexport const SearchedMoviesReducer = (state = [], action) => {\n    if (action.type === ActionTypes.MENU_SEARCH) {\n        return _.uniqBy([...action.payload, ...state], \"id\");\n    }\n    return state;\n}","\nimport { ActionTypes } from '../actionTypes';\nimport _ from 'lodash';\n\nexport const PopularMoviesReducer = (state = [], action) => {\n    if (action.type === ActionTypes.MOVIES_MOSTPOPULAR) {\n        return _.uniqBy([...action.payload, ...state], \"id\");\n    }\n    return state;\n}\n\nexport const NowPlayingMoviesReducer = (state = [], action) => {\n    if (action.type === ActionTypes.MOVIES_NOWPLAYING) {\n        return _.uniqBy([...action.payload, ...state], \"id\");\n    }\n    return state;\n}\n\nexport const UpcomingMoviesReducer = (state = [], action) => {\n    if (action.type === ActionTypes.MOVIES_UPCOMING) {\n        return _.uniqBy([...action.payload, ...state], \"id\");\n    }\n    return state;\n}\n\nexport const PopularTVReducer = (state = [], action) => {\n    if (action.type === ActionTypes.TVS_MOSTPOPULAR) {\n        return _.uniqBy([...action.payload, ...state], \"id\");\n    }\n    return state;\n}\n\nexport const TrendingMoviesReducer = (state = [], action) => {\n    if (action.type === ActionTypes.MOVIES_TRENDING) {\n        return _.uniqBy([...action.payload, ...state], \"id\");\n    }\n    return state;\n}","\nimport { ActionTypes } from '../actionTypes';\nimport _ from 'lodash';\n\nexport const MovieDetailsReducer = (state = {}, action) => {\n    if (action.type === ActionTypes.MOVIE_DETAILS) {\n        return { ...action.payload }\n    }\n    return state;\n}\n\n\nexport const SimilarMoviesReducer = (state = [], action) => {\n    if (action.type === ActionTypes.MOVIES_SIMILAR) {\n        return _.uniqBy([...action.payload, ...state], \"id\");\n    }\n    return state;\n}\n\n\nexport const MovieActorsReducer = (state = [], action) => {\n    if (action.type === ActionTypes.MOVIE_ACTORS) {\n        return _.uniqBy([...action.payload, ...state], \"id\");\n    }\n    return state;\n}\n\n\nexport const ActorsAllMoviesReducer = (state = [], action) => {\n    if (action.type === ActionTypes.ACTOR_ALL_MOVIES) {\n        return _.uniqBy([...action.payload, ...state], \"id\");\n    }\n    return state;\n}\n\n\nexport const ActorDetailsReducer = (state = {}, action) => {\n    if (action.type === ActionTypes.ACTOR_DETAILS) {\n        return { ...action.payload };\n    }\n    return state;\n}\n\n\n","import React from 'react';\nimport './sass/style.scss';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\n\nimport { NotFoundPage } from './Pages/NotFound.page';\nimport { MovieDetailsPage } from './Pages/MovieDetails.page';\nimport { ActorDetailsPage } from './Pages/ActorDetails.page'\nimport { HomePage } from './Pages/Home.page';\n\nimport reducers from './base.reducers'\n\n\n\nfunction App() {\n  return (\n    <Router basename={\"/movies-overflow\"}>\n\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/details/:id\" component={MovieDetailsPage} />\n        <Route path=\"/actors/:id\" component={ActorDetailsPage} />\n        <Route path=\"/404\" component={NotFoundPage} />\n        <Redirect to=\"/404\" />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n/** Redux Setup **/\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from './base.reducers';\nimport thunk from 'redux-thunk';\n\n\nReactDOM.render(<Provider store={createStore(reducers, applyMiddleware(thunk))}>\n    <App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}